ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"logDataTimer.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	logDataTimer_initVar
  18              		.bss
  19              		.type	logDataTimer_initVar, %object
  20              		.size	logDataTimer_initVar, 1
  21              	logDataTimer_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.logDataTimer_Init,"ax",%progbits
  24              		.align	2
  25              		.global	logDataTimer_Init
  26              		.code	16
  27              		.thumb_func
  28              		.type	logDataTimer_Init, %function
  29              	logDataTimer_Init:
  30              	.LFB0:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\logDataTimer.c"
   1:.\Generated_Source\PSoC4/logDataTimer.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/logDataTimer.c **** * File Name: logDataTimer.c
   3:.\Generated_Source\PSoC4/logDataTimer.c **** * Version 2.50
   4:.\Generated_Source\PSoC4/logDataTimer.c **** *
   5:.\Generated_Source\PSoC4/logDataTimer.c **** * Description:
   6:.\Generated_Source\PSoC4/logDataTimer.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:.\Generated_Source\PSoC4/logDataTimer.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:.\Generated_Source\PSoC4/logDataTimer.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:.\Generated_Source\PSoC4/logDataTimer.c **** *  by a positive or negative edge signal as well as via software.
  10:.\Generated_Source\PSoC4/logDataTimer.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:.\Generated_Source\PSoC4/logDataTimer.c **** *  falling edge, either edge or continous run.
  12:.\Generated_Source\PSoC4/logDataTimer.c **** *  Interrupts may be generated due to a terminal count condition
  13:.\Generated_Source\PSoC4/logDataTimer.c **** *  or a capture event.
  14:.\Generated_Source\PSoC4/logDataTimer.c **** *
  15:.\Generated_Source\PSoC4/logDataTimer.c **** * Note:
  16:.\Generated_Source\PSoC4/logDataTimer.c **** *
  17:.\Generated_Source\PSoC4/logDataTimer.c **** ********************************************************************************
  18:.\Generated_Source\PSoC4/logDataTimer.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC4/logDataTimer.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC4/logDataTimer.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC4/logDataTimer.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC4/logDataTimer.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC4/logDataTimer.c **** 
  24:.\Generated_Source\PSoC4/logDataTimer.c **** #include "logDataTimer.h"
  25:.\Generated_Source\PSoC4/logDataTimer.c **** 
  26:.\Generated_Source\PSoC4/logDataTimer.c **** uint8 logDataTimer_initVar = 0u;
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 2


  27:.\Generated_Source\PSoC4/logDataTimer.c **** 
  28:.\Generated_Source\PSoC4/logDataTimer.c **** 
  29:.\Generated_Source\PSoC4/logDataTimer.c **** /*******************************************************************************
  30:.\Generated_Source\PSoC4/logDataTimer.c **** * Function Name: logDataTimer_Init
  31:.\Generated_Source\PSoC4/logDataTimer.c **** ********************************************************************************
  32:.\Generated_Source\PSoC4/logDataTimer.c **** *
  33:.\Generated_Source\PSoC4/logDataTimer.c **** * Summary:
  34:.\Generated_Source\PSoC4/logDataTimer.c **** *  Initialize to the schematic state
  35:.\Generated_Source\PSoC4/logDataTimer.c **** *
  36:.\Generated_Source\PSoC4/logDataTimer.c **** * Parameters:
  37:.\Generated_Source\PSoC4/logDataTimer.c **** *  void
  38:.\Generated_Source\PSoC4/logDataTimer.c **** *
  39:.\Generated_Source\PSoC4/logDataTimer.c **** * Return:
  40:.\Generated_Source\PSoC4/logDataTimer.c **** *  void
  41:.\Generated_Source\PSoC4/logDataTimer.c **** *
  42:.\Generated_Source\PSoC4/logDataTimer.c **** *******************************************************************************/
  43:.\Generated_Source\PSoC4/logDataTimer.c **** void logDataTimer_Init(void) 
  44:.\Generated_Source\PSoC4/logDataTimer.c **** {
  32              		.loc 1 44 0
  33              		.cfi_startproc
  34 0000 90B5     		push	{r4, r7, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 12
  37              		.cfi_offset 4, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 83B0     		sub	sp, sp, #12
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 24
  43 0004 00AF     		add	r7, sp, #0
  44              	.LCFI2:
  45              		.cfi_def_cfa_register 7
  45:.\Generated_Source\PSoC4/logDataTimer.c ****     #if(!logDataTimer_UsingFixedFunction)
  46:.\Generated_Source\PSoC4/logDataTimer.c ****             /* Interrupt State Backup for Critical Region*/
  47:.\Generated_Source\PSoC4/logDataTimer.c ****             uint8 logDataTimer_interruptState;
  48:.\Generated_Source\PSoC4/logDataTimer.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:.\Generated_Source\PSoC4/logDataTimer.c **** 
  50:.\Generated_Source\PSoC4/logDataTimer.c ****     #if (logDataTimer_UsingFixedFunction)
  51:.\Generated_Source\PSoC4/logDataTimer.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:.\Generated_Source\PSoC4/logDataTimer.c ****         logDataTimer_CONTROL &= logDataTimer_CTRL_ENABLE;
  53:.\Generated_Source\PSoC4/logDataTimer.c **** 
  54:.\Generated_Source\PSoC4/logDataTimer.c ****         /* Clear the mode bits for continuous run mode */
  55:.\Generated_Source\PSoC4/logDataTimer.c ****         #if (CY_PSOC5A)
  56:.\Generated_Source\PSoC4/logDataTimer.c ****             logDataTimer_CONTROL2 &= ((uint8)(~logDataTimer_CTRL_MODE_MASK));
  57:.\Generated_Source\PSoC4/logDataTimer.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:.\Generated_Source\PSoC4/logDataTimer.c **** 
  59:.\Generated_Source\PSoC4/logDataTimer.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:.\Generated_Source\PSoC4/logDataTimer.c ****             logDataTimer_CONTROL3 &= ((uint8)(~logDataTimer_CTRL_MODE_MASK));
  61:.\Generated_Source\PSoC4/logDataTimer.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:.\Generated_Source\PSoC4/logDataTimer.c **** 
  63:.\Generated_Source\PSoC4/logDataTimer.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:.\Generated_Source\PSoC4/logDataTimer.c ****         #if (logDataTimer_RunModeUsed != 0x0u)
  65:.\Generated_Source\PSoC4/logDataTimer.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:.\Generated_Source\PSoC4/logDataTimer.c ****             logDataTimer_CONTROL |= 0x04u;
  67:.\Generated_Source\PSoC4/logDataTimer.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:.\Generated_Source\PSoC4/logDataTimer.c **** 
  69:.\Generated_Source\PSoC4/logDataTimer.c ****         #if (logDataTimer_RunModeUsed == 2)
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 3


  70:.\Generated_Source\PSoC4/logDataTimer.c ****             #if (CY_PSOC5A)
  71:.\Generated_Source\PSoC4/logDataTimer.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:.\Generated_Source\PSoC4/logDataTimer.c ****                 interrupt) is enabled*/
  73:.\Generated_Source\PSoC4/logDataTimer.c ****                 logDataTimer_CONTROL2 |= 0x03u;
  74:.\Generated_Source\PSoC4/logDataTimer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:.\Generated_Source\PSoC4/logDataTimer.c **** 
  76:.\Generated_Source\PSoC4/logDataTimer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:.\Generated_Source\PSoC4/logDataTimer.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:.\Generated_Source\PSoC4/logDataTimer.c ****                 interrupt) is enabled*/
  79:.\Generated_Source\PSoC4/logDataTimer.c ****                 logDataTimer_CONTROL3 |= 0x03u;
  80:.\Generated_Source\PSoC4/logDataTimer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:.\Generated_Source\PSoC4/logDataTimer.c **** 
  82:.\Generated_Source\PSoC4/logDataTimer.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:.\Generated_Source\PSoC4/logDataTimer.c **** 
  84:.\Generated_Source\PSoC4/logDataTimer.c ****         #if (logDataTimer_UsingHWEnable != 0)
  85:.\Generated_Source\PSoC4/logDataTimer.c ****             #if (CY_PSOC5A)
  86:.\Generated_Source\PSoC4/logDataTimer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:.\Generated_Source\PSoC4/logDataTimer.c ****                 logDataTimer_CONTROL2 |= logDataTimer_CTRL_MODE_PULSEWIDTH;
  88:.\Generated_Source\PSoC4/logDataTimer.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
  89:.\Generated_Source\PSoC4/logDataTimer.c **** 
  90:.\Generated_Source\PSoC4/logDataTimer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:.\Generated_Source\PSoC4/logDataTimer.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:.\Generated_Source\PSoC4/logDataTimer.c ****                 logDataTimer_CONTROL3 &= ((uint8)(~logDataTimer_CTRL_RCOD_MASK));
  93:.\Generated_Source\PSoC4/logDataTimer.c ****                 logDataTimer_CONTROL3 |= logDataTimer_CTRL_RCOD;
  94:.\Generated_Source\PSoC4/logDataTimer.c **** 
  95:.\Generated_Source\PSoC4/logDataTimer.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:.\Generated_Source\PSoC4/logDataTimer.c ****                 logDataTimer_CONTROL3 &= ((uint8)(~logDataTimer_CTRL_ENBL_MASK));
  97:.\Generated_Source\PSoC4/logDataTimer.c ****                 logDataTimer_CONTROL3 |= logDataTimer_CTRL_ENBL;
  98:.\Generated_Source\PSoC4/logDataTimer.c **** 
  99:.\Generated_Source\PSoC4/logDataTimer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:.\Generated_Source\PSoC4/logDataTimer.c ****                 logDataTimer_CONTROL3 |= logDataTimer_CTRL_MODE_CONTINUOUS;
 101:.\Generated_Source\PSoC4/logDataTimer.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:.\Generated_Source\PSoC4/logDataTimer.c **** 
 103:.\Generated_Source\PSoC4/logDataTimer.c ****         #endif /* Configure Run Mode with hardware enable */
 104:.\Generated_Source\PSoC4/logDataTimer.c **** 
 105:.\Generated_Source\PSoC4/logDataTimer.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:.\Generated_Source\PSoC4/logDataTimer.c ****         logDataTimer_RT1 &= ((uint8)(~logDataTimer_RT1_MASK));
 107:.\Generated_Source\PSoC4/logDataTimer.c ****         logDataTimer_RT1 |= logDataTimer_SYNC;
 108:.\Generated_Source\PSoC4/logDataTimer.c **** 
 109:.\Generated_Source\PSoC4/logDataTimer.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:.\Generated_Source\PSoC4/logDataTimer.c ****         logDataTimer_RT1 &= ((uint8)(~logDataTimer_SYNCDSI_MASK));
 111:.\Generated_Source\PSoC4/logDataTimer.c ****         logDataTimer_RT1 |= logDataTimer_SYNCDSI_EN;
 112:.\Generated_Source\PSoC4/logDataTimer.c **** 
 113:.\Generated_Source\PSoC4/logDataTimer.c ****         /* Set the IRQ to use the status register interrupts */
 114:.\Generated_Source\PSoC4/logDataTimer.c ****         logDataTimer_CONTROL2 |= logDataTimer_CTRL2_IRQ_SEL;
 115:.\Generated_Source\PSoC4/logDataTimer.c ****     #endif /* Configuring registers of fixed function implementation */
 116:.\Generated_Source\PSoC4/logDataTimer.c **** 
 117:.\Generated_Source\PSoC4/logDataTimer.c ****     /* Set Initial values from Configuration */
 118:.\Generated_Source\PSoC4/logDataTimer.c ****     logDataTimer_WritePeriod(logDataTimer_INIT_PERIOD);
  46              		.loc 1 118 0
  47 0006 FF20     		mov	r0, #255
  48 0008 FFF7FEFF 		bl	logDataTimer_WritePeriod
 119:.\Generated_Source\PSoC4/logDataTimer.c ****     logDataTimer_WriteCounter(logDataTimer_INIT_PERIOD);
  49              		.loc 1 119 0
  50 000c FF20     		mov	r0, #255
  51 000e FFF7FEFF 		bl	logDataTimer_WriteCounter
 120:.\Generated_Source\PSoC4/logDataTimer.c **** 
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 4


 121:.\Generated_Source\PSoC4/logDataTimer.c ****     #if (logDataTimer_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:.\Generated_Source\PSoC4/logDataTimer.c ****         logDataTimer_CAPTURE_COUNT_CTRL |= logDataTimer_CNTR_ENABLE;
 123:.\Generated_Source\PSoC4/logDataTimer.c ****         logDataTimer_SetCaptureCount(logDataTimer_INIT_CAPTURE_COUNT);
 124:.\Generated_Source\PSoC4/logDataTimer.c ****     #endif /* Configure capture counter value */
 125:.\Generated_Source\PSoC4/logDataTimer.c **** 
 126:.\Generated_Source\PSoC4/logDataTimer.c ****     #if (!logDataTimer_UsingFixedFunction)
 127:.\Generated_Source\PSoC4/logDataTimer.c ****         #if (logDataTimer_SoftwareCaptureMode)
 128:.\Generated_Source\PSoC4/logDataTimer.c ****             logDataTimer_SetCaptureMode(logDataTimer_INIT_CAPTURE_MODE);
 129:.\Generated_Source\PSoC4/logDataTimer.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:.\Generated_Source\PSoC4/logDataTimer.c **** 
 131:.\Generated_Source\PSoC4/logDataTimer.c ****         #if (logDataTimer_SoftwareTriggerMode)
 132:.\Generated_Source\PSoC4/logDataTimer.c ****             if (0u == (logDataTimer_CONTROL & logDataTimer__B_TIMER__TM_SOFTWARE))
 133:.\Generated_Source\PSoC4/logDataTimer.c ****             {
 134:.\Generated_Source\PSoC4/logDataTimer.c ****                 logDataTimer_SetTriggerMode(logDataTimer_INIT_TRIGGER_MODE);
 135:.\Generated_Source\PSoC4/logDataTimer.c ****             }
 136:.\Generated_Source\PSoC4/logDataTimer.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 137:.\Generated_Source\PSoC4/logDataTimer.c **** 
 138:.\Generated_Source\PSoC4/logDataTimer.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 139:.\Generated_Source\PSoC4/logDataTimer.c ****         /* Enter Critical Region*/
 140:.\Generated_Source\PSoC4/logDataTimer.c ****         logDataTimer_interruptState = CyEnterCriticalSection();
  52              		.loc 1 140 0
  53 0012 FC1D     		add	r4, r7, #7
  54 0014 FFF7FEFF 		bl	CyEnterCriticalSection
  55 0018 031C     		mov	r3, r0
  56 001a 2370     		strb	r3, [r4]
 141:.\Generated_Source\PSoC4/logDataTimer.c **** 
 142:.\Generated_Source\PSoC4/logDataTimer.c ****         /* Use the interrupt output of the status register for IRQ output */
 143:.\Generated_Source\PSoC4/logDataTimer.c ****         logDataTimer_STATUS_AUX_CTRL |= logDataTimer_STATUS_ACTL_INT_EN_MASK;
  57              		.loc 1 143 0
  58 001c 0A4B     		ldr	r3, .L2
  59 001e 0A4A     		ldr	r2, .L2
  60 0020 1278     		ldrb	r2, [r2]
  61 0022 D2B2     		uxtb	r2, r2
  62 0024 1021     		mov	r1, #16
  63 0026 0A43     		orr	r2, r1
  64 0028 D2B2     		uxtb	r2, r2
  65 002a 1A70     		strb	r2, [r3]
 144:.\Generated_Source\PSoC4/logDataTimer.c **** 
 145:.\Generated_Source\PSoC4/logDataTimer.c ****         /* Exit Critical Region*/
 146:.\Generated_Source\PSoC4/logDataTimer.c ****         CyExitCriticalSection(logDataTimer_interruptState);
  66              		.loc 1 146 0
  67 002c FB1D     		add	r3, r7, #7
  68 002e 1B78     		ldrb	r3, [r3]
  69 0030 181C     		mov	r0, r3
  70 0032 FFF7FEFF 		bl	CyExitCriticalSection
 147:.\Generated_Source\PSoC4/logDataTimer.c **** 
 148:.\Generated_Source\PSoC4/logDataTimer.c ****         #if (logDataTimer_EnableTriggerMode)
 149:.\Generated_Source\PSoC4/logDataTimer.c ****             logDataTimer_EnableTrigger();
 150:.\Generated_Source\PSoC4/logDataTimer.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 151:.\Generated_Source\PSoC4/logDataTimer.c **** 
 152:.\Generated_Source\PSoC4/logDataTimer.c ****         #if (logDataTimer_InterruptOnCaptureCount)
 153:.\Generated_Source\PSoC4/logDataTimer.c ****              #if (!logDataTimer_ControlRegRemoved)
 154:.\Generated_Source\PSoC4/logDataTimer.c ****                 logDataTimer_SetInterruptCount(logDataTimer_INIT_INT_CAPTURE_COUNT);
 155:.\Generated_Source\PSoC4/logDataTimer.c ****             #endif /* Set interrupt count in control register if control register is not removed */
 156:.\Generated_Source\PSoC4/logDataTimer.c ****         #endif /*Set interrupt count in UDB implementation if interrupt count feature is checked.*/
 157:.\Generated_Source\PSoC4/logDataTimer.c **** 
 158:.\Generated_Source\PSoC4/logDataTimer.c ****         logDataTimer_ClearFIFO();
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 5


  71              		.loc 1 158 0
  72 0036 FFF7FEFF 		bl	logDataTimer_ClearFIFO
 159:.\Generated_Source\PSoC4/logDataTimer.c ****     #endif /* Configure additional features of UDB implementation */
 160:.\Generated_Source\PSoC4/logDataTimer.c **** 
 161:.\Generated_Source\PSoC4/logDataTimer.c ****     logDataTimer_SetInterruptMode(logDataTimer_INIT_INTERRUPT_MODE);
  73              		.loc 1 161 0
  74 003a 0020     		mov	r0, #0
  75 003c FFF7FEFF 		bl	logDataTimer_SetInterruptMode
 162:.\Generated_Source\PSoC4/logDataTimer.c **** }
  76              		.loc 1 162 0
  77 0040 BD46     		mov	sp, r7
  78 0042 03B0     		add	sp, sp, #12
  79              		@ sp needed for prologue
  80 0044 90BD     		pop	{r4, r7, pc}
  81              	.L3:
  82 0046 C046     		.align	2
  83              	.L2:
  84 0048 93000F40 		.word	1074725011
  85              		.cfi_endproc
  86              	.LFE0:
  87              		.size	logDataTimer_Init, .-logDataTimer_Init
  88              		.section	.text.logDataTimer_Enable,"ax",%progbits
  89              		.align	2
  90              		.global	logDataTimer_Enable
  91              		.code	16
  92              		.thumb_func
  93              		.type	logDataTimer_Enable, %function
  94              	logDataTimer_Enable:
  95              	.LFB1:
 163:.\Generated_Source\PSoC4/logDataTimer.c **** 
 164:.\Generated_Source\PSoC4/logDataTimer.c **** 
 165:.\Generated_Source\PSoC4/logDataTimer.c **** /*******************************************************************************
 166:.\Generated_Source\PSoC4/logDataTimer.c **** * Function Name: logDataTimer_Enable
 167:.\Generated_Source\PSoC4/logDataTimer.c **** ********************************************************************************
 168:.\Generated_Source\PSoC4/logDataTimer.c **** *
 169:.\Generated_Source\PSoC4/logDataTimer.c **** * Summary:
 170:.\Generated_Source\PSoC4/logDataTimer.c **** *  Enable the Timer
 171:.\Generated_Source\PSoC4/logDataTimer.c **** *
 172:.\Generated_Source\PSoC4/logDataTimer.c **** * Parameters:
 173:.\Generated_Source\PSoC4/logDataTimer.c **** *  void
 174:.\Generated_Source\PSoC4/logDataTimer.c **** *
 175:.\Generated_Source\PSoC4/logDataTimer.c **** * Return:
 176:.\Generated_Source\PSoC4/logDataTimer.c **** *  void
 177:.\Generated_Source\PSoC4/logDataTimer.c **** *
 178:.\Generated_Source\PSoC4/logDataTimer.c **** *******************************************************************************/
 179:.\Generated_Source\PSoC4/logDataTimer.c **** void logDataTimer_Enable(void) 
 180:.\Generated_Source\PSoC4/logDataTimer.c **** {
  96              		.loc 1 180 0
  97              		.cfi_startproc
  98 0000 80B5     		push	{r7, lr}
  99              	.LCFI3:
 100              		.cfi_def_cfa_offset 8
 101              		.cfi_offset 7, -8
 102              		.cfi_offset 14, -4
 103 0002 00AF     		add	r7, sp, #0
 104              	.LCFI4:
 105              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 6


 181:.\Generated_Source\PSoC4/logDataTimer.c ****     /* Globally Enable the Fixed Function Block chosen */
 182:.\Generated_Source\PSoC4/logDataTimer.c ****     #if (logDataTimer_UsingFixedFunction)
 183:.\Generated_Source\PSoC4/logDataTimer.c ****         logDataTimer_GLOBAL_ENABLE |= logDataTimer_BLOCK_EN_MASK;
 184:.\Generated_Source\PSoC4/logDataTimer.c ****         logDataTimer_GLOBAL_STBY_ENABLE |= logDataTimer_BLOCK_STBY_EN_MASK;
 185:.\Generated_Source\PSoC4/logDataTimer.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 186:.\Generated_Source\PSoC4/logDataTimer.c **** 
 187:.\Generated_Source\PSoC4/logDataTimer.c ****     /* Remove assignment if control register is removed */
 188:.\Generated_Source\PSoC4/logDataTimer.c ****     #if (!logDataTimer_ControlRegRemoved || logDataTimer_UsingFixedFunction)
 189:.\Generated_Source\PSoC4/logDataTimer.c ****         logDataTimer_CONTROL |= logDataTimer_CTRL_ENABLE;
 106              		.loc 1 189 0
 107 0004 054B     		ldr	r3, .L5
 108 0006 054A     		ldr	r2, .L5
 109 0008 1278     		ldrb	r2, [r2]
 110 000a D2B2     		uxtb	r2, r2
 111 000c 8021     		mov	r1, #128
 112 000e 4942     		neg	r1, r1
 113 0010 0A43     		orr	r2, r1
 114 0012 D2B2     		uxtb	r2, r2
 115 0014 1A70     		strb	r2, [r3]
 190:.\Generated_Source\PSoC4/logDataTimer.c ****     #endif /* Remove assignment if control register is removed */
 191:.\Generated_Source\PSoC4/logDataTimer.c **** }
 116              		.loc 1 191 0
 117 0016 BD46     		mov	sp, r7
 118              		@ sp needed for prologue
 119 0018 80BD     		pop	{r7, pc}
 120              	.L6:
 121 001a C046     		.align	2
 122              	.L5:
 123 001c 73000F40 		.word	1074724979
 124              		.cfi_endproc
 125              	.LFE1:
 126              		.size	logDataTimer_Enable, .-logDataTimer_Enable
 127              		.section	.text.logDataTimer_Start,"ax",%progbits
 128              		.align	2
 129              		.global	logDataTimer_Start
 130              		.code	16
 131              		.thumb_func
 132              		.type	logDataTimer_Start, %function
 133              	logDataTimer_Start:
 134              	.LFB2:
 192:.\Generated_Source\PSoC4/logDataTimer.c **** 
 193:.\Generated_Source\PSoC4/logDataTimer.c **** 
 194:.\Generated_Source\PSoC4/logDataTimer.c **** /*******************************************************************************
 195:.\Generated_Source\PSoC4/logDataTimer.c **** * Function Name: logDataTimer_Start
 196:.\Generated_Source\PSoC4/logDataTimer.c **** ********************************************************************************
 197:.\Generated_Source\PSoC4/logDataTimer.c **** *
 198:.\Generated_Source\PSoC4/logDataTimer.c **** * Summary:
 199:.\Generated_Source\PSoC4/logDataTimer.c **** *  The start function initializes the timer with the default values, the
 200:.\Generated_Source\PSoC4/logDataTimer.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 201:.\Generated_Source\PSoC4/logDataTimer.c **** *  the EnableInt command should be called if interrupt generation is required.
 202:.\Generated_Source\PSoC4/logDataTimer.c **** *
 203:.\Generated_Source\PSoC4/logDataTimer.c **** * Parameters:
 204:.\Generated_Source\PSoC4/logDataTimer.c **** *  void
 205:.\Generated_Source\PSoC4/logDataTimer.c **** *
 206:.\Generated_Source\PSoC4/logDataTimer.c **** * Return:
 207:.\Generated_Source\PSoC4/logDataTimer.c **** *  void
 208:.\Generated_Source\PSoC4/logDataTimer.c **** *
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 7


 209:.\Generated_Source\PSoC4/logDataTimer.c **** * Global variables:
 210:.\Generated_Source\PSoC4/logDataTimer.c **** *  logDataTimer_initVar: Is modified when this function is called for the
 211:.\Generated_Source\PSoC4/logDataTimer.c **** *   first time. Is used to ensure that initialization happens only once.
 212:.\Generated_Source\PSoC4/logDataTimer.c **** *
 213:.\Generated_Source\PSoC4/logDataTimer.c **** *******************************************************************************/
 214:.\Generated_Source\PSoC4/logDataTimer.c **** void logDataTimer_Start(void) 
 215:.\Generated_Source\PSoC4/logDataTimer.c **** {
 135              		.loc 1 215 0
 136              		.cfi_startproc
 137 0000 80B5     		push	{r7, lr}
 138              	.LCFI5:
 139              		.cfi_def_cfa_offset 8
 140              		.cfi_offset 7, -8
 141              		.cfi_offset 14, -4
 142 0002 00AF     		add	r7, sp, #0
 143              	.LCFI6:
 144              		.cfi_def_cfa_register 7
 216:.\Generated_Source\PSoC4/logDataTimer.c ****     if(logDataTimer_initVar == 0u)
 145              		.loc 1 216 0
 146 0004 064B     		ldr	r3, .L9
 147 0006 1B78     		ldrb	r3, [r3]
 148 0008 002B     		cmp	r3, #0
 149 000a 04D1     		bne	.L8
 217:.\Generated_Source\PSoC4/logDataTimer.c ****     {
 218:.\Generated_Source\PSoC4/logDataTimer.c ****         logDataTimer_Init();
 150              		.loc 1 218 0
 151 000c FFF7FEFF 		bl	logDataTimer_Init
 219:.\Generated_Source\PSoC4/logDataTimer.c **** 
 220:.\Generated_Source\PSoC4/logDataTimer.c ****         logDataTimer_initVar = 1u;   /* Clear this bit for Initialization */
 152              		.loc 1 220 0
 153 0010 034B     		ldr	r3, .L9
 154 0012 0122     		mov	r2, #1
 155 0014 1A70     		strb	r2, [r3]
 156              	.L8:
 221:.\Generated_Source\PSoC4/logDataTimer.c ****     }
 222:.\Generated_Source\PSoC4/logDataTimer.c **** 
 223:.\Generated_Source\PSoC4/logDataTimer.c ****     /* Enable the Timer */
 224:.\Generated_Source\PSoC4/logDataTimer.c ****     logDataTimer_Enable();
 157              		.loc 1 224 0
 158 0016 FFF7FEFF 		bl	logDataTimer_Enable
 225:.\Generated_Source\PSoC4/logDataTimer.c **** }
 159              		.loc 1 225 0
 160 001a BD46     		mov	sp, r7
 161              		@ sp needed for prologue
 162 001c 80BD     		pop	{r7, pc}
 163              	.L10:
 164 001e C046     		.align	2
 165              	.L9:
 166 0020 00000000 		.word	logDataTimer_initVar
 167              		.cfi_endproc
 168              	.LFE2:
 169              		.size	logDataTimer_Start, .-logDataTimer_Start
 170              		.section	.text.logDataTimer_Stop,"ax",%progbits
 171              		.align	2
 172              		.global	logDataTimer_Stop
 173              		.code	16
 174              		.thumb_func
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 8


 175              		.type	logDataTimer_Stop, %function
 176              	logDataTimer_Stop:
 177              	.LFB3:
 226:.\Generated_Source\PSoC4/logDataTimer.c **** 
 227:.\Generated_Source\PSoC4/logDataTimer.c **** 
 228:.\Generated_Source\PSoC4/logDataTimer.c **** /*******************************************************************************
 229:.\Generated_Source\PSoC4/logDataTimer.c **** * Function Name: logDataTimer_Stop
 230:.\Generated_Source\PSoC4/logDataTimer.c **** ********************************************************************************
 231:.\Generated_Source\PSoC4/logDataTimer.c **** *
 232:.\Generated_Source\PSoC4/logDataTimer.c **** * Summary:
 233:.\Generated_Source\PSoC4/logDataTimer.c **** *  The stop function halts the timer, but does not change any modes or disable
 234:.\Generated_Source\PSoC4/logDataTimer.c **** *  interrupts.
 235:.\Generated_Source\PSoC4/logDataTimer.c **** *
 236:.\Generated_Source\PSoC4/logDataTimer.c **** * Parameters:
 237:.\Generated_Source\PSoC4/logDataTimer.c **** *  void
 238:.\Generated_Source\PSoC4/logDataTimer.c **** *
 239:.\Generated_Source\PSoC4/logDataTimer.c **** * Return:
 240:.\Generated_Source\PSoC4/logDataTimer.c **** *  void
 241:.\Generated_Source\PSoC4/logDataTimer.c **** *
 242:.\Generated_Source\PSoC4/logDataTimer.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 243:.\Generated_Source\PSoC4/logDataTimer.c **** *               has no effect on the operation of the timer.
 244:.\Generated_Source\PSoC4/logDataTimer.c **** *
 245:.\Generated_Source\PSoC4/logDataTimer.c **** *******************************************************************************/
 246:.\Generated_Source\PSoC4/logDataTimer.c **** void logDataTimer_Stop(void) 
 247:.\Generated_Source\PSoC4/logDataTimer.c **** {
 178              		.loc 1 247 0
 179              		.cfi_startproc
 180 0000 80B5     		push	{r7, lr}
 181              	.LCFI7:
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 7, -8
 184              		.cfi_offset 14, -4
 185 0002 00AF     		add	r7, sp, #0
 186              	.LCFI8:
 187              		.cfi_def_cfa_register 7
 248:.\Generated_Source\PSoC4/logDataTimer.c ****     /* Disable Timer */
 249:.\Generated_Source\PSoC4/logDataTimer.c ****     #if(!logDataTimer_ControlRegRemoved || logDataTimer_UsingFixedFunction)
 250:.\Generated_Source\PSoC4/logDataTimer.c ****         logDataTimer_CONTROL &= ((uint8)(~logDataTimer_CTRL_ENABLE));
 188              		.loc 1 250 0
 189 0004 044B     		ldr	r3, .L12
 190 0006 044A     		ldr	r2, .L12
 191 0008 1278     		ldrb	r2, [r2]
 192 000a D1B2     		uxtb	r1, r2
 193 000c 7F22     		mov	r2, #127
 194 000e 0A40     		and	r2, r1
 195 0010 D2B2     		uxtb	r2, r2
 196 0012 1A70     		strb	r2, [r3]
 251:.\Generated_Source\PSoC4/logDataTimer.c ****     #endif /* Remove assignment if control register is removed */
 252:.\Generated_Source\PSoC4/logDataTimer.c **** 
 253:.\Generated_Source\PSoC4/logDataTimer.c ****     /* Globally disable the Fixed Function Block chosen */
 254:.\Generated_Source\PSoC4/logDataTimer.c ****     #if (logDataTimer_UsingFixedFunction)
 255:.\Generated_Source\PSoC4/logDataTimer.c ****         logDataTimer_GLOBAL_ENABLE &= ((uint8)(~logDataTimer_BLOCK_EN_MASK));
 256:.\Generated_Source\PSoC4/logDataTimer.c ****         logDataTimer_GLOBAL_STBY_ENABLE &= ((uint8)(~logDataTimer_BLOCK_STBY_EN_MASK));
 257:.\Generated_Source\PSoC4/logDataTimer.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 258:.\Generated_Source\PSoC4/logDataTimer.c **** }
 197              		.loc 1 258 0
 198 0014 BD46     		mov	sp, r7
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 9


 199              		@ sp needed for prologue
 200 0016 80BD     		pop	{r7, pc}
 201              	.L13:
 202              		.align	2
 203              	.L12:
 204 0018 73000F40 		.word	1074724979
 205              		.cfi_endproc
 206              	.LFE3:
 207              		.size	logDataTimer_Stop, .-logDataTimer_Stop
 208              		.section	.text.logDataTimer_SetInterruptMode,"ax",%progbits
 209              		.align	2
 210              		.global	logDataTimer_SetInterruptMode
 211              		.code	16
 212              		.thumb_func
 213              		.type	logDataTimer_SetInterruptMode, %function
 214              	logDataTimer_SetInterruptMode:
 215              	.LFB4:
 259:.\Generated_Source\PSoC4/logDataTimer.c **** 
 260:.\Generated_Source\PSoC4/logDataTimer.c **** 
 261:.\Generated_Source\PSoC4/logDataTimer.c **** /*******************************************************************************
 262:.\Generated_Source\PSoC4/logDataTimer.c **** * Function Name: logDataTimer_SetInterruptMode
 263:.\Generated_Source\PSoC4/logDataTimer.c **** ********************************************************************************
 264:.\Generated_Source\PSoC4/logDataTimer.c **** *
 265:.\Generated_Source\PSoC4/logDataTimer.c **** * Summary:
 266:.\Generated_Source\PSoC4/logDataTimer.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 267:.\Generated_Source\PSoC4/logDataTimer.c **** *  The twosources are caputure and terminal.  One, both or neither may
 268:.\Generated_Source\PSoC4/logDataTimer.c **** *  be selected.
 269:.\Generated_Source\PSoC4/logDataTimer.c **** *
 270:.\Generated_Source\PSoC4/logDataTimer.c **** * Parameters:
 271:.\Generated_Source\PSoC4/logDataTimer.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 272:.\Generated_Source\PSoC4/logDataTimer.c **** *                   terminal count or capture.
 273:.\Generated_Source\PSoC4/logDataTimer.c **** *
 274:.\Generated_Source\PSoC4/logDataTimer.c **** * Return:
 275:.\Generated_Source\PSoC4/logDataTimer.c **** *  void
 276:.\Generated_Source\PSoC4/logDataTimer.c **** *
 277:.\Generated_Source\PSoC4/logDataTimer.c **** *******************************************************************************/
 278:.\Generated_Source\PSoC4/logDataTimer.c **** void logDataTimer_SetInterruptMode(uint8 interruptMode) 
 279:.\Generated_Source\PSoC4/logDataTimer.c **** {
 216              		.loc 1 279 0
 217              		.cfi_startproc
 218 0000 80B5     		push	{r7, lr}
 219              	.LCFI9:
 220              		.cfi_def_cfa_offset 8
 221              		.cfi_offset 7, -8
 222              		.cfi_offset 14, -4
 223 0002 82B0     		sub	sp, sp, #8
 224              	.LCFI10:
 225              		.cfi_def_cfa_offset 16
 226 0004 00AF     		add	r7, sp, #0
 227              	.LCFI11:
 228              		.cfi_def_cfa_register 7
 229 0006 021C     		mov	r2, r0
 230 0008 FB1D     		add	r3, r7, #7
 231 000a 1A70     		strb	r2, [r3]
 280:.\Generated_Source\PSoC4/logDataTimer.c ****     logDataTimer_STATUS_MASK = interruptMode;
 232              		.loc 1 280 0
 233 000c 034B     		ldr	r3, .L15
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 10


 234 000e FA1D     		add	r2, r7, #7
 235 0010 1278     		ldrb	r2, [r2]
 236 0012 1A70     		strb	r2, [r3]
 281:.\Generated_Source\PSoC4/logDataTimer.c **** }
 237              		.loc 1 281 0
 238 0014 BD46     		mov	sp, r7
 239 0016 02B0     		add	sp, sp, #8
 240              		@ sp needed for prologue
 241 0018 80BD     		pop	{r7, pc}
 242              	.L16:
 243 001a C046     		.align	2
 244              	.L15:
 245 001c 83000F40 		.word	1074724995
 246              		.cfi_endproc
 247              	.LFE4:
 248              		.size	logDataTimer_SetInterruptMode, .-logDataTimer_SetInterruptMode
 249              		.section	.text.logDataTimer_SoftwareCapture,"ax",%progbits
 250              		.align	2
 251              		.global	logDataTimer_SoftwareCapture
 252              		.code	16
 253              		.thumb_func
 254              		.type	logDataTimer_SoftwareCapture, %function
 255              	logDataTimer_SoftwareCapture:
 256              	.LFB5:
 282:.\Generated_Source\PSoC4/logDataTimer.c **** 
 283:.\Generated_Source\PSoC4/logDataTimer.c **** 
 284:.\Generated_Source\PSoC4/logDataTimer.c **** /*******************************************************************************
 285:.\Generated_Source\PSoC4/logDataTimer.c **** * Function Name: logDataTimer_SoftwareCapture
 286:.\Generated_Source\PSoC4/logDataTimer.c **** ********************************************************************************
 287:.\Generated_Source\PSoC4/logDataTimer.c **** *
 288:.\Generated_Source\PSoC4/logDataTimer.c **** * Summary:
 289:.\Generated_Source\PSoC4/logDataTimer.c **** *  This function forces a capture independent of the capture signal.
 290:.\Generated_Source\PSoC4/logDataTimer.c **** *
 291:.\Generated_Source\PSoC4/logDataTimer.c **** * Parameters:
 292:.\Generated_Source\PSoC4/logDataTimer.c **** *  void
 293:.\Generated_Source\PSoC4/logDataTimer.c **** *
 294:.\Generated_Source\PSoC4/logDataTimer.c **** * Return:
 295:.\Generated_Source\PSoC4/logDataTimer.c **** *  void
 296:.\Generated_Source\PSoC4/logDataTimer.c **** *
 297:.\Generated_Source\PSoC4/logDataTimer.c **** * Side Effects:
 298:.\Generated_Source\PSoC4/logDataTimer.c **** *  An existing hardware capture could be overwritten.
 299:.\Generated_Source\PSoC4/logDataTimer.c **** *
 300:.\Generated_Source\PSoC4/logDataTimer.c **** *******************************************************************************/
 301:.\Generated_Source\PSoC4/logDataTimer.c **** void logDataTimer_SoftwareCapture(void) 
 302:.\Generated_Source\PSoC4/logDataTimer.c **** {
 257              		.loc 1 302 0
 258              		.cfi_startproc
 259 0000 80B5     		push	{r7, lr}
 260              	.LCFI12:
 261              		.cfi_def_cfa_offset 8
 262              		.cfi_offset 7, -8
 263              		.cfi_offset 14, -4
 264 0002 00AF     		add	r7, sp, #0
 265              	.LCFI13:
 266              		.cfi_def_cfa_register 7
 303:.\Generated_Source\PSoC4/logDataTimer.c ****     /* Generate a software capture by reading the counter register */
 304:.\Generated_Source\PSoC4/logDataTimer.c ****     (void)logDataTimer_COUNTER_LSB;
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 11


 267              		.loc 1 304 0
 268 0004 014B     		ldr	r3, .L18
 269 0006 1B78     		ldrb	r3, [r3]
 305:.\Generated_Source\PSoC4/logDataTimer.c ****     /* Capture Data is now in the FIFO */
 306:.\Generated_Source\PSoC4/logDataTimer.c **** }
 270              		.loc 1 306 0
 271 0008 BD46     		mov	sp, r7
 272              		@ sp needed for prologue
 273 000a 80BD     		pop	{r7, pc}
 274              	.L19:
 275              		.align	2
 276              	.L18:
 277 000c 03000F40 		.word	1074724867
 278              		.cfi_endproc
 279              	.LFE5:
 280              		.size	logDataTimer_SoftwareCapture, .-logDataTimer_SoftwareCapture
 281              		.section	.text.logDataTimer_ReadStatusRegister,"ax",%progbits
 282              		.align	2
 283              		.global	logDataTimer_ReadStatusRegister
 284              		.code	16
 285              		.thumb_func
 286              		.type	logDataTimer_ReadStatusRegister, %function
 287              	logDataTimer_ReadStatusRegister:
 288              	.LFB6:
 307:.\Generated_Source\PSoC4/logDataTimer.c **** 
 308:.\Generated_Source\PSoC4/logDataTimer.c **** 
 309:.\Generated_Source\PSoC4/logDataTimer.c **** /*******************************************************************************
 310:.\Generated_Source\PSoC4/logDataTimer.c **** * Function Name: logDataTimer_ReadStatusRegister
 311:.\Generated_Source\PSoC4/logDataTimer.c **** ********************************************************************************
 312:.\Generated_Source\PSoC4/logDataTimer.c **** *
 313:.\Generated_Source\PSoC4/logDataTimer.c **** * Summary:
 314:.\Generated_Source\PSoC4/logDataTimer.c **** *  Reads the status register and returns it's state. This function should use
 315:.\Generated_Source\PSoC4/logDataTimer.c **** *  defined types for the bit-field information as the bits in this register may
 316:.\Generated_Source\PSoC4/logDataTimer.c **** *  be permuteable.
 317:.\Generated_Source\PSoC4/logDataTimer.c **** *
 318:.\Generated_Source\PSoC4/logDataTimer.c **** * Parameters:
 319:.\Generated_Source\PSoC4/logDataTimer.c **** *  void
 320:.\Generated_Source\PSoC4/logDataTimer.c **** *
 321:.\Generated_Source\PSoC4/logDataTimer.c **** * Return:
 322:.\Generated_Source\PSoC4/logDataTimer.c **** *  The contents of the status register
 323:.\Generated_Source\PSoC4/logDataTimer.c **** *
 324:.\Generated_Source\PSoC4/logDataTimer.c **** * Side Effects:
 325:.\Generated_Source\PSoC4/logDataTimer.c **** *  Status register bits may be clear on read.
 326:.\Generated_Source\PSoC4/logDataTimer.c **** *
 327:.\Generated_Source\PSoC4/logDataTimer.c **** *******************************************************************************/
 328:.\Generated_Source\PSoC4/logDataTimer.c **** uint8   logDataTimer_ReadStatusRegister(void) 
 329:.\Generated_Source\PSoC4/logDataTimer.c **** {
 289              		.loc 1 329 0
 290              		.cfi_startproc
 291 0000 80B5     		push	{r7, lr}
 292              	.LCFI14:
 293              		.cfi_def_cfa_offset 8
 294              		.cfi_offset 7, -8
 295              		.cfi_offset 14, -4
 296 0002 00AF     		add	r7, sp, #0
 297              	.LCFI15:
 298              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 12


 330:.\Generated_Source\PSoC4/logDataTimer.c ****     return (logDataTimer_STATUS);
 299              		.loc 1 330 0
 300 0004 024B     		ldr	r3, .L22
 301 0006 1B78     		ldrb	r3, [r3]
 302 0008 DBB2     		uxtb	r3, r3
 331:.\Generated_Source\PSoC4/logDataTimer.c **** }
 303              		.loc 1 331 0
 304 000a 181C     		mov	r0, r3
 305 000c BD46     		mov	sp, r7
 306              		@ sp needed for prologue
 307 000e 80BD     		pop	{r7, pc}
 308              	.L23:
 309              		.align	2
 310              	.L22:
 311 0010 63000F40 		.word	1074724963
 312              		.cfi_endproc
 313              	.LFE6:
 314              		.size	logDataTimer_ReadStatusRegister, .-logDataTimer_ReadStatusRegister
 315              		.section	.text.logDataTimer_ReadControlRegister,"ax",%progbits
 316              		.align	2
 317              		.global	logDataTimer_ReadControlRegister
 318              		.code	16
 319              		.thumb_func
 320              		.type	logDataTimer_ReadControlRegister, %function
 321              	logDataTimer_ReadControlRegister:
 322              	.LFB7:
 332:.\Generated_Source\PSoC4/logDataTimer.c **** 
 333:.\Generated_Source\PSoC4/logDataTimer.c **** 
 334:.\Generated_Source\PSoC4/logDataTimer.c **** #if (!logDataTimer_ControlRegRemoved) /* Remove API if control register is removed */
 335:.\Generated_Source\PSoC4/logDataTimer.c **** 
 336:.\Generated_Source\PSoC4/logDataTimer.c **** 
 337:.\Generated_Source\PSoC4/logDataTimer.c **** /*******************************************************************************
 338:.\Generated_Source\PSoC4/logDataTimer.c **** * Function Name: logDataTimer_ReadControlRegister
 339:.\Generated_Source\PSoC4/logDataTimer.c **** ********************************************************************************
 340:.\Generated_Source\PSoC4/logDataTimer.c **** *
 341:.\Generated_Source\PSoC4/logDataTimer.c **** * Summary:
 342:.\Generated_Source\PSoC4/logDataTimer.c **** *  Reads the control register and returns it's value.
 343:.\Generated_Source\PSoC4/logDataTimer.c **** *
 344:.\Generated_Source\PSoC4/logDataTimer.c **** * Parameters:
 345:.\Generated_Source\PSoC4/logDataTimer.c **** *  void
 346:.\Generated_Source\PSoC4/logDataTimer.c **** *
 347:.\Generated_Source\PSoC4/logDataTimer.c **** * Return:
 348:.\Generated_Source\PSoC4/logDataTimer.c **** *  The contents of the control register
 349:.\Generated_Source\PSoC4/logDataTimer.c **** *
 350:.\Generated_Source\PSoC4/logDataTimer.c **** *******************************************************************************/
 351:.\Generated_Source\PSoC4/logDataTimer.c **** uint8 logDataTimer_ReadControlRegister(void) 
 352:.\Generated_Source\PSoC4/logDataTimer.c **** {
 323              		.loc 1 352 0
 324              		.cfi_startproc
 325 0000 80B5     		push	{r7, lr}
 326              	.LCFI16:
 327              		.cfi_def_cfa_offset 8
 328              		.cfi_offset 7, -8
 329              		.cfi_offset 14, -4
 330 0002 00AF     		add	r7, sp, #0
 331              	.LCFI17:
 332              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 13


 353:.\Generated_Source\PSoC4/logDataTimer.c ****     return ((uint8)logDataTimer_CONTROL);
 333              		.loc 1 353 0
 334 0004 024B     		ldr	r3, .L26
 335 0006 1B78     		ldrb	r3, [r3]
 336 0008 DBB2     		uxtb	r3, r3
 354:.\Generated_Source\PSoC4/logDataTimer.c **** }
 337              		.loc 1 354 0
 338 000a 181C     		mov	r0, r3
 339 000c BD46     		mov	sp, r7
 340              		@ sp needed for prologue
 341 000e 80BD     		pop	{r7, pc}
 342              	.L27:
 343              		.align	2
 344              	.L26:
 345 0010 73000F40 		.word	1074724979
 346              		.cfi_endproc
 347              	.LFE7:
 348              		.size	logDataTimer_ReadControlRegister, .-logDataTimer_ReadControlRegister
 349              		.section	.text.logDataTimer_WriteControlRegister,"ax",%progbits
 350              		.align	2
 351              		.global	logDataTimer_WriteControlRegister
 352              		.code	16
 353              		.thumb_func
 354              		.type	logDataTimer_WriteControlRegister, %function
 355              	logDataTimer_WriteControlRegister:
 356              	.LFB8:
 355:.\Generated_Source\PSoC4/logDataTimer.c **** 
 356:.\Generated_Source\PSoC4/logDataTimer.c **** 
 357:.\Generated_Source\PSoC4/logDataTimer.c **** /*******************************************************************************
 358:.\Generated_Source\PSoC4/logDataTimer.c **** * Function Name: logDataTimer_WriteControlRegister
 359:.\Generated_Source\PSoC4/logDataTimer.c **** ********************************************************************************
 360:.\Generated_Source\PSoC4/logDataTimer.c **** *
 361:.\Generated_Source\PSoC4/logDataTimer.c **** * Summary:
 362:.\Generated_Source\PSoC4/logDataTimer.c **** *  Sets the bit-field of the control register.
 363:.\Generated_Source\PSoC4/logDataTimer.c **** *
 364:.\Generated_Source\PSoC4/logDataTimer.c **** * Parameters:
 365:.\Generated_Source\PSoC4/logDataTimer.c **** *  control: The contents of the control register
 366:.\Generated_Source\PSoC4/logDataTimer.c **** *
 367:.\Generated_Source\PSoC4/logDataTimer.c **** * Return:
 368:.\Generated_Source\PSoC4/logDataTimer.c **** *
 369:.\Generated_Source\PSoC4/logDataTimer.c **** *******************************************************************************/
 370:.\Generated_Source\PSoC4/logDataTimer.c **** void logDataTimer_WriteControlRegister(uint8 control) 
 371:.\Generated_Source\PSoC4/logDataTimer.c **** {
 357              		.loc 1 371 0
 358              		.cfi_startproc
 359 0000 80B5     		push	{r7, lr}
 360              	.LCFI18:
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 7, -8
 363              		.cfi_offset 14, -4
 364 0002 82B0     		sub	sp, sp, #8
 365              	.LCFI19:
 366              		.cfi_def_cfa_offset 16
 367 0004 00AF     		add	r7, sp, #0
 368              	.LCFI20:
 369              		.cfi_def_cfa_register 7
 370 0006 021C     		mov	r2, r0
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 14


 371 0008 FB1D     		add	r3, r7, #7
 372 000a 1A70     		strb	r2, [r3]
 372:.\Generated_Source\PSoC4/logDataTimer.c ****     logDataTimer_CONTROL = control;
 373              		.loc 1 372 0
 374 000c 034B     		ldr	r3, .L29
 375 000e FA1D     		add	r2, r7, #7
 376 0010 1278     		ldrb	r2, [r2]
 377 0012 1A70     		strb	r2, [r3]
 373:.\Generated_Source\PSoC4/logDataTimer.c **** }
 378              		.loc 1 373 0
 379 0014 BD46     		mov	sp, r7
 380 0016 02B0     		add	sp, sp, #8
 381              		@ sp needed for prologue
 382 0018 80BD     		pop	{r7, pc}
 383              	.L30:
 384 001a C046     		.align	2
 385              	.L29:
 386 001c 73000F40 		.word	1074724979
 387              		.cfi_endproc
 388              	.LFE8:
 389              		.size	logDataTimer_WriteControlRegister, .-logDataTimer_WriteControlRegister
 390              		.section	.text.logDataTimer_ReadPeriod,"ax",%progbits
 391              		.align	2
 392              		.global	logDataTimer_ReadPeriod
 393              		.code	16
 394              		.thumb_func
 395              		.type	logDataTimer_ReadPeriod, %function
 396              	logDataTimer_ReadPeriod:
 397              	.LFB9:
 374:.\Generated_Source\PSoC4/logDataTimer.c **** #endif /* Remove API if control register is removed */
 375:.\Generated_Source\PSoC4/logDataTimer.c **** 
 376:.\Generated_Source\PSoC4/logDataTimer.c **** 
 377:.\Generated_Source\PSoC4/logDataTimer.c **** /*******************************************************************************
 378:.\Generated_Source\PSoC4/logDataTimer.c **** * Function Name: logDataTimer_ReadPeriod
 379:.\Generated_Source\PSoC4/logDataTimer.c **** ********************************************************************************
 380:.\Generated_Source\PSoC4/logDataTimer.c **** *
 381:.\Generated_Source\PSoC4/logDataTimer.c **** * Summary:
 382:.\Generated_Source\PSoC4/logDataTimer.c **** *  This function returns the current value of the Period.
 383:.\Generated_Source\PSoC4/logDataTimer.c **** *
 384:.\Generated_Source\PSoC4/logDataTimer.c **** * Parameters:
 385:.\Generated_Source\PSoC4/logDataTimer.c **** *  void
 386:.\Generated_Source\PSoC4/logDataTimer.c **** *
 387:.\Generated_Source\PSoC4/logDataTimer.c **** * Return:
 388:.\Generated_Source\PSoC4/logDataTimer.c **** *  The present value of the counter.
 389:.\Generated_Source\PSoC4/logDataTimer.c **** *
 390:.\Generated_Source\PSoC4/logDataTimer.c **** *******************************************************************************/
 391:.\Generated_Source\PSoC4/logDataTimer.c **** uint8 logDataTimer_ReadPeriod(void) 
 392:.\Generated_Source\PSoC4/logDataTimer.c **** {
 398              		.loc 1 392 0
 399              		.cfi_startproc
 400 0000 80B5     		push	{r7, lr}
 401              	.LCFI21:
 402              		.cfi_def_cfa_offset 8
 403              		.cfi_offset 7, -8
 404              		.cfi_offset 14, -4
 405 0002 00AF     		add	r7, sp, #0
 406              	.LCFI22:
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 15


 407              		.cfi_def_cfa_register 7
 393:.\Generated_Source\PSoC4/logDataTimer.c ****    #if(logDataTimer_UsingFixedFunction)
 394:.\Generated_Source\PSoC4/logDataTimer.c ****        return ((uint8)CY_GET_REG16(logDataTimer_PERIOD_LSB_PTR));
 395:.\Generated_Source\PSoC4/logDataTimer.c ****    #else
 396:.\Generated_Source\PSoC4/logDataTimer.c ****        return (CY_GET_REG8(logDataTimer_PERIOD_LSB_PTR));
 408              		.loc 1 396 0
 409 0004 024B     		ldr	r3, .L33
 410 0006 1B78     		ldrb	r3, [r3]
 411 0008 DBB2     		uxtb	r3, r3
 397:.\Generated_Source\PSoC4/logDataTimer.c ****    #endif /* (logDataTimer_UsingFixedFunction) */
 398:.\Generated_Source\PSoC4/logDataTimer.c **** }
 412              		.loc 1 398 0
 413 000a 181C     		mov	r0, r3
 414 000c BD46     		mov	sp, r7
 415              		@ sp needed for prologue
 416 000e 80BD     		pop	{r7, pc}
 417              	.L34:
 418              		.align	2
 419              	.L33:
 420 0010 23000F40 		.word	1074724899
 421              		.cfi_endproc
 422              	.LFE9:
 423              		.size	logDataTimer_ReadPeriod, .-logDataTimer_ReadPeriod
 424              		.section	.text.logDataTimer_WritePeriod,"ax",%progbits
 425              		.align	2
 426              		.global	logDataTimer_WritePeriod
 427              		.code	16
 428              		.thumb_func
 429              		.type	logDataTimer_WritePeriod, %function
 430              	logDataTimer_WritePeriod:
 431              	.LFB10:
 399:.\Generated_Source\PSoC4/logDataTimer.c **** 
 400:.\Generated_Source\PSoC4/logDataTimer.c **** 
 401:.\Generated_Source\PSoC4/logDataTimer.c **** /*******************************************************************************
 402:.\Generated_Source\PSoC4/logDataTimer.c **** * Function Name: logDataTimer_WritePeriod
 403:.\Generated_Source\PSoC4/logDataTimer.c **** ********************************************************************************
 404:.\Generated_Source\PSoC4/logDataTimer.c **** *
 405:.\Generated_Source\PSoC4/logDataTimer.c **** * Summary:
 406:.\Generated_Source\PSoC4/logDataTimer.c **** *  This function is used to change the period of the counter.  The new period
 407:.\Generated_Source\PSoC4/logDataTimer.c **** *  will be loaded the next time terminal count is detected.
 408:.\Generated_Source\PSoC4/logDataTimer.c **** *
 409:.\Generated_Source\PSoC4/logDataTimer.c **** * Parameters:
 410:.\Generated_Source\PSoC4/logDataTimer.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 411:.\Generated_Source\PSoC4/logDataTimer.c **** *          result in the counter remaining at zero.
 412:.\Generated_Source\PSoC4/logDataTimer.c **** *
 413:.\Generated_Source\PSoC4/logDataTimer.c **** * Return:
 414:.\Generated_Source\PSoC4/logDataTimer.c **** *  void
 415:.\Generated_Source\PSoC4/logDataTimer.c **** *
 416:.\Generated_Source\PSoC4/logDataTimer.c **** *******************************************************************************/
 417:.\Generated_Source\PSoC4/logDataTimer.c **** void logDataTimer_WritePeriod(uint8 period) 
 418:.\Generated_Source\PSoC4/logDataTimer.c **** {
 432              		.loc 1 418 0
 433              		.cfi_startproc
 434 0000 80B5     		push	{r7, lr}
 435              	.LCFI23:
 436              		.cfi_def_cfa_offset 8
 437              		.cfi_offset 7, -8
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 16


 438              		.cfi_offset 14, -4
 439 0002 82B0     		sub	sp, sp, #8
 440              	.LCFI24:
 441              		.cfi_def_cfa_offset 16
 442 0004 00AF     		add	r7, sp, #0
 443              	.LCFI25:
 444              		.cfi_def_cfa_register 7
 445 0006 021C     		mov	r2, r0
 446 0008 FB1D     		add	r3, r7, #7
 447 000a 1A70     		strb	r2, [r3]
 419:.\Generated_Source\PSoC4/logDataTimer.c ****     #if(logDataTimer_UsingFixedFunction)
 420:.\Generated_Source\PSoC4/logDataTimer.c ****         uint16 period_temp = (uint16)period;
 421:.\Generated_Source\PSoC4/logDataTimer.c ****         CY_SET_REG16(logDataTimer_PERIOD_LSB_PTR, period_temp);
 422:.\Generated_Source\PSoC4/logDataTimer.c ****     #else
 423:.\Generated_Source\PSoC4/logDataTimer.c ****         CY_SET_REG8(logDataTimer_PERIOD_LSB_PTR, period);
 448              		.loc 1 423 0
 449 000c 034B     		ldr	r3, .L36
 450 000e FA1D     		add	r2, r7, #7
 451 0010 1278     		ldrb	r2, [r2]
 452 0012 1A70     		strb	r2, [r3]
 424:.\Generated_Source\PSoC4/logDataTimer.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 425:.\Generated_Source\PSoC4/logDataTimer.c **** }
 453              		.loc 1 425 0
 454 0014 BD46     		mov	sp, r7
 455 0016 02B0     		add	sp, sp, #8
 456              		@ sp needed for prologue
 457 0018 80BD     		pop	{r7, pc}
 458              	.L37:
 459 001a C046     		.align	2
 460              	.L36:
 461 001c 23000F40 		.word	1074724899
 462              		.cfi_endproc
 463              	.LFE10:
 464              		.size	logDataTimer_WritePeriod, .-logDataTimer_WritePeriod
 465              		.section	.text.logDataTimer_ReadCapture,"ax",%progbits
 466              		.align	2
 467              		.global	logDataTimer_ReadCapture
 468              		.code	16
 469              		.thumb_func
 470              		.type	logDataTimer_ReadCapture, %function
 471              	logDataTimer_ReadCapture:
 472              	.LFB11:
 426:.\Generated_Source\PSoC4/logDataTimer.c **** 
 427:.\Generated_Source\PSoC4/logDataTimer.c **** 
 428:.\Generated_Source\PSoC4/logDataTimer.c **** /*******************************************************************************
 429:.\Generated_Source\PSoC4/logDataTimer.c **** * Function Name: logDataTimer_ReadCapture
 430:.\Generated_Source\PSoC4/logDataTimer.c **** ********************************************************************************
 431:.\Generated_Source\PSoC4/logDataTimer.c **** *
 432:.\Generated_Source\PSoC4/logDataTimer.c **** * Summary:
 433:.\Generated_Source\PSoC4/logDataTimer.c **** *  This function returns the last value captured.
 434:.\Generated_Source\PSoC4/logDataTimer.c **** *
 435:.\Generated_Source\PSoC4/logDataTimer.c **** * Parameters:
 436:.\Generated_Source\PSoC4/logDataTimer.c **** *  void
 437:.\Generated_Source\PSoC4/logDataTimer.c **** *
 438:.\Generated_Source\PSoC4/logDataTimer.c **** * Return:
 439:.\Generated_Source\PSoC4/logDataTimer.c **** *  Present Capture value.
 440:.\Generated_Source\PSoC4/logDataTimer.c **** *
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 17


 441:.\Generated_Source\PSoC4/logDataTimer.c **** *******************************************************************************/
 442:.\Generated_Source\PSoC4/logDataTimer.c **** uint8 logDataTimer_ReadCapture(void) 
 443:.\Generated_Source\PSoC4/logDataTimer.c **** {
 473              		.loc 1 443 0
 474              		.cfi_startproc
 475 0000 80B5     		push	{r7, lr}
 476              	.LCFI26:
 477              		.cfi_def_cfa_offset 8
 478              		.cfi_offset 7, -8
 479              		.cfi_offset 14, -4
 480 0002 00AF     		add	r7, sp, #0
 481              	.LCFI27:
 482              		.cfi_def_cfa_register 7
 444:.\Generated_Source\PSoC4/logDataTimer.c ****    #if(logDataTimer_UsingFixedFunction)
 445:.\Generated_Source\PSoC4/logDataTimer.c ****        return ((uint8)CY_GET_REG16(logDataTimer_CAPTURE_LSB_PTR));
 446:.\Generated_Source\PSoC4/logDataTimer.c ****    #else
 447:.\Generated_Source\PSoC4/logDataTimer.c ****        return (CY_GET_REG8(logDataTimer_CAPTURE_LSB_PTR));
 483              		.loc 1 447 0
 484 0004 024B     		ldr	r3, .L40
 485 0006 1B78     		ldrb	r3, [r3]
 486 0008 DBB2     		uxtb	r3, r3
 448:.\Generated_Source\PSoC4/logDataTimer.c ****    #endif /* (logDataTimer_UsingFixedFunction) */
 449:.\Generated_Source\PSoC4/logDataTimer.c **** }
 487              		.loc 1 449 0
 488 000a 181C     		mov	r0, r3
 489 000c BD46     		mov	sp, r7
 490              		@ sp needed for prologue
 491 000e 80BD     		pop	{r7, pc}
 492              	.L41:
 493              		.align	2
 494              	.L40:
 495 0010 43000F40 		.word	1074724931
 496              		.cfi_endproc
 497              	.LFE11:
 498              		.size	logDataTimer_ReadCapture, .-logDataTimer_ReadCapture
 499              		.section	.text.logDataTimer_WriteCounter,"ax",%progbits
 500              		.align	2
 501              		.global	logDataTimer_WriteCounter
 502              		.code	16
 503              		.thumb_func
 504              		.type	logDataTimer_WriteCounter, %function
 505              	logDataTimer_WriteCounter:
 506              	.LFB12:
 450:.\Generated_Source\PSoC4/logDataTimer.c **** 
 451:.\Generated_Source\PSoC4/logDataTimer.c **** 
 452:.\Generated_Source\PSoC4/logDataTimer.c **** /*******************************************************************************
 453:.\Generated_Source\PSoC4/logDataTimer.c **** * Function Name: logDataTimer_WriteCounter
 454:.\Generated_Source\PSoC4/logDataTimer.c **** ********************************************************************************
 455:.\Generated_Source\PSoC4/logDataTimer.c **** *
 456:.\Generated_Source\PSoC4/logDataTimer.c **** * Summary:
 457:.\Generated_Source\PSoC4/logDataTimer.c **** *  This funtion is used to set the counter to a specific value
 458:.\Generated_Source\PSoC4/logDataTimer.c **** *
 459:.\Generated_Source\PSoC4/logDataTimer.c **** * Parameters:
 460:.\Generated_Source\PSoC4/logDataTimer.c **** *  counter:  New counter value.
 461:.\Generated_Source\PSoC4/logDataTimer.c **** *
 462:.\Generated_Source\PSoC4/logDataTimer.c **** * Return:
 463:.\Generated_Source\PSoC4/logDataTimer.c **** *  void
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 18


 464:.\Generated_Source\PSoC4/logDataTimer.c **** *
 465:.\Generated_Source\PSoC4/logDataTimer.c **** *******************************************************************************/
 466:.\Generated_Source\PSoC4/logDataTimer.c **** void logDataTimer_WriteCounter(uint8 counter) \
 467:.\Generated_Source\PSoC4/logDataTimer.c ****                                    
 468:.\Generated_Source\PSoC4/logDataTimer.c **** {
 507              		.loc 1 468 0
 508              		.cfi_startproc
 509 0000 80B5     		push	{r7, lr}
 510              	.LCFI28:
 511              		.cfi_def_cfa_offset 8
 512              		.cfi_offset 7, -8
 513              		.cfi_offset 14, -4
 514 0002 82B0     		sub	sp, sp, #8
 515              	.LCFI29:
 516              		.cfi_def_cfa_offset 16
 517 0004 00AF     		add	r7, sp, #0
 518              	.LCFI30:
 519              		.cfi_def_cfa_register 7
 520 0006 021C     		mov	r2, r0
 521 0008 FB1D     		add	r3, r7, #7
 522 000a 1A70     		strb	r2, [r3]
 469:.\Generated_Source\PSoC4/logDataTimer.c ****    #if(logDataTimer_UsingFixedFunction)
 470:.\Generated_Source\PSoC4/logDataTimer.c ****         /* This functionality is removed until a FixedFunction HW update to
 471:.\Generated_Source\PSoC4/logDataTimer.c ****          * allow this register to be written
 472:.\Generated_Source\PSoC4/logDataTimer.c ****          */
 473:.\Generated_Source\PSoC4/logDataTimer.c ****         CY_SET_REG16(logDataTimer_COUNTER_LSB_PTR, (uint16)counter);
 474:.\Generated_Source\PSoC4/logDataTimer.c ****         
 475:.\Generated_Source\PSoC4/logDataTimer.c ****     #else
 476:.\Generated_Source\PSoC4/logDataTimer.c ****         CY_SET_REG8(logDataTimer_COUNTER_LSB_PTR, counter);
 523              		.loc 1 476 0
 524 000c 034B     		ldr	r3, .L43
 525 000e FA1D     		add	r2, r7, #7
 526 0010 1278     		ldrb	r2, [r2]
 527 0012 1A70     		strb	r2, [r3]
 477:.\Generated_Source\PSoC4/logDataTimer.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 478:.\Generated_Source\PSoC4/logDataTimer.c **** }
 528              		.loc 1 478 0
 529 0014 BD46     		mov	sp, r7
 530 0016 02B0     		add	sp, sp, #8
 531              		@ sp needed for prologue
 532 0018 80BD     		pop	{r7, pc}
 533              	.L44:
 534 001a C046     		.align	2
 535              	.L43:
 536 001c 03000F40 		.word	1074724867
 537              		.cfi_endproc
 538              	.LFE12:
 539              		.size	logDataTimer_WriteCounter, .-logDataTimer_WriteCounter
 540              		.section	.text.logDataTimer_ReadCounter,"ax",%progbits
 541              		.align	2
 542              		.global	logDataTimer_ReadCounter
 543              		.code	16
 544              		.thumb_func
 545              		.type	logDataTimer_ReadCounter, %function
 546              	logDataTimer_ReadCounter:
 547              	.LFB13:
 479:.\Generated_Source\PSoC4/logDataTimer.c **** 
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 19


 480:.\Generated_Source\PSoC4/logDataTimer.c **** 
 481:.\Generated_Source\PSoC4/logDataTimer.c **** /*******************************************************************************
 482:.\Generated_Source\PSoC4/logDataTimer.c **** * Function Name: logDataTimer_ReadCounter
 483:.\Generated_Source\PSoC4/logDataTimer.c **** ********************************************************************************
 484:.\Generated_Source\PSoC4/logDataTimer.c **** *
 485:.\Generated_Source\PSoC4/logDataTimer.c **** * Summary:
 486:.\Generated_Source\PSoC4/logDataTimer.c **** *  This function returns the current counter value.
 487:.\Generated_Source\PSoC4/logDataTimer.c **** *
 488:.\Generated_Source\PSoC4/logDataTimer.c **** * Parameters:
 489:.\Generated_Source\PSoC4/logDataTimer.c **** *  void
 490:.\Generated_Source\PSoC4/logDataTimer.c **** *
 491:.\Generated_Source\PSoC4/logDataTimer.c **** * Return:
 492:.\Generated_Source\PSoC4/logDataTimer.c **** *  Present compare value.
 493:.\Generated_Source\PSoC4/logDataTimer.c **** *
 494:.\Generated_Source\PSoC4/logDataTimer.c **** *******************************************************************************/
 495:.\Generated_Source\PSoC4/logDataTimer.c **** uint8 logDataTimer_ReadCounter(void) 
 496:.\Generated_Source\PSoC4/logDataTimer.c **** {
 548              		.loc 1 496 0
 549              		.cfi_startproc
 550 0000 80B5     		push	{r7, lr}
 551              	.LCFI31:
 552              		.cfi_def_cfa_offset 8
 553              		.cfi_offset 7, -8
 554              		.cfi_offset 14, -4
 555 0002 00AF     		add	r7, sp, #0
 556              	.LCFI32:
 557              		.cfi_def_cfa_register 7
 497:.\Generated_Source\PSoC4/logDataTimer.c **** 
 498:.\Generated_Source\PSoC4/logDataTimer.c ****     /* Force capture by reading Accumulator */
 499:.\Generated_Source\PSoC4/logDataTimer.c ****     /* Must first do a software capture to be able to read the counter */
 500:.\Generated_Source\PSoC4/logDataTimer.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 501:.\Generated_Source\PSoC4/logDataTimer.c ****     (void)logDataTimer_COUNTER_LSB;
 558              		.loc 1 501 0
 559 0004 034B     		ldr	r3, .L47
 560 0006 1B78     		ldrb	r3, [r3]
 502:.\Generated_Source\PSoC4/logDataTimer.c **** 
 503:.\Generated_Source\PSoC4/logDataTimer.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 504:.\Generated_Source\PSoC4/logDataTimer.c ****     #if(logDataTimer_UsingFixedFunction)
 505:.\Generated_Source\PSoC4/logDataTimer.c ****         return ((uint8)CY_GET_REG16(logDataTimer_CAPTURE_LSB_PTR));
 506:.\Generated_Source\PSoC4/logDataTimer.c ****     #else
 507:.\Generated_Source\PSoC4/logDataTimer.c ****         return (CY_GET_REG8(logDataTimer_CAPTURE_LSB_PTR));
 561              		.loc 1 507 0
 562 0008 034B     		ldr	r3, .L47+4
 563 000a 1B78     		ldrb	r3, [r3]
 564 000c DBB2     		uxtb	r3, r3
 508:.\Generated_Source\PSoC4/logDataTimer.c ****     #endif /* (logDataTimer_UsingFixedFunction) */
 509:.\Generated_Source\PSoC4/logDataTimer.c **** }
 565              		.loc 1 509 0
 566 000e 181C     		mov	r0, r3
 567 0010 BD46     		mov	sp, r7
 568              		@ sp needed for prologue
 569 0012 80BD     		pop	{r7, pc}
 570              	.L48:
 571              		.align	2
 572              	.L47:
 573 0014 03000F40 		.word	1074724867
 574 0018 43000F40 		.word	1074724931
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 20


 575              		.cfi_endproc
 576              	.LFE13:
 577              		.size	logDataTimer_ReadCounter, .-logDataTimer_ReadCounter
 578              		.section	.text.logDataTimer_ClearFIFO,"ax",%progbits
 579              		.align	2
 580              		.global	logDataTimer_ClearFIFO
 581              		.code	16
 582              		.thumb_func
 583              		.type	logDataTimer_ClearFIFO, %function
 584              	logDataTimer_ClearFIFO:
 585              	.LFB14:
 510:.\Generated_Source\PSoC4/logDataTimer.c **** 
 511:.\Generated_Source\PSoC4/logDataTimer.c **** 
 512:.\Generated_Source\PSoC4/logDataTimer.c **** #if(!logDataTimer_UsingFixedFunction) /* UDB Specific Functions */
 513:.\Generated_Source\PSoC4/logDataTimer.c **** 
 514:.\Generated_Source\PSoC4/logDataTimer.c **** /*******************************************************************************
 515:.\Generated_Source\PSoC4/logDataTimer.c ****  * The functions below this point are only available using the UDB
 516:.\Generated_Source\PSoC4/logDataTimer.c ****  * implementation.  If a feature is selected, then the API is enabled.
 517:.\Generated_Source\PSoC4/logDataTimer.c ****  ******************************************************************************/
 518:.\Generated_Source\PSoC4/logDataTimer.c **** 
 519:.\Generated_Source\PSoC4/logDataTimer.c **** 
 520:.\Generated_Source\PSoC4/logDataTimer.c **** #if (logDataTimer_SoftwareCaptureMode)
 521:.\Generated_Source\PSoC4/logDataTimer.c **** 
 522:.\Generated_Source\PSoC4/logDataTimer.c **** 
 523:.\Generated_Source\PSoC4/logDataTimer.c **** /*******************************************************************************
 524:.\Generated_Source\PSoC4/logDataTimer.c **** * Function Name: logDataTimer_SetCaptureMode
 525:.\Generated_Source\PSoC4/logDataTimer.c **** ********************************************************************************
 526:.\Generated_Source\PSoC4/logDataTimer.c **** *
 527:.\Generated_Source\PSoC4/logDataTimer.c **** * Summary:
 528:.\Generated_Source\PSoC4/logDataTimer.c **** *  This function sets the capture mode to either rising or falling edge.
 529:.\Generated_Source\PSoC4/logDataTimer.c **** *
 530:.\Generated_Source\PSoC4/logDataTimer.c **** * Parameters:
 531:.\Generated_Source\PSoC4/logDataTimer.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 532:.\Generated_Source\PSoC4/logDataTimer.c **** *  The parameter values are defined using the
 533:.\Generated_Source\PSoC4/logDataTimer.c **** *  #define logDataTimer__B_TIMER__CM_NONE 0
 534:.\Generated_Source\PSoC4/logDataTimer.c **** #define logDataTimer__B_TIMER__CM_RISINGEDGE 1
 535:.\Generated_Source\PSoC4/logDataTimer.c **** #define logDataTimer__B_TIMER__CM_FALLINGEDGE 2
 536:.\Generated_Source\PSoC4/logDataTimer.c **** #define logDataTimer__B_TIMER__CM_EITHEREDGE 3
 537:.\Generated_Source\PSoC4/logDataTimer.c **** #define logDataTimer__B_TIMER__CM_SOFTWARE 4
 538:.\Generated_Source\PSoC4/logDataTimer.c ****  identifiers
 539:.\Generated_Source\PSoC4/logDataTimer.c **** *  The following are the possible values of the parameter
 540:.\Generated_Source\PSoC4/logDataTimer.c **** *  logDataTimer__B_TIMER__CM_NONE        - Set Capture mode to None
 541:.\Generated_Source\PSoC4/logDataTimer.c **** *  logDataTimer__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 542:.\Generated_Source\PSoC4/logDataTimer.c **** *  logDataTimer__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 543:.\Generated_Source\PSoC4/logDataTimer.c **** *  logDataTimer__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 544:.\Generated_Source\PSoC4/logDataTimer.c **** *
 545:.\Generated_Source\PSoC4/logDataTimer.c **** * Return:
 546:.\Generated_Source\PSoC4/logDataTimer.c **** *  void
 547:.\Generated_Source\PSoC4/logDataTimer.c **** *
 548:.\Generated_Source\PSoC4/logDataTimer.c **** *******************************************************************************/
 549:.\Generated_Source\PSoC4/logDataTimer.c **** void logDataTimer_SetCaptureMode(uint8 captureMode) 
 550:.\Generated_Source\PSoC4/logDataTimer.c **** {
 551:.\Generated_Source\PSoC4/logDataTimer.c ****     /* This must only set to two bits of the control register associated */
 552:.\Generated_Source\PSoC4/logDataTimer.c ****     captureMode = ((uint8)((uint8)captureMode << logDataTimer_CTRL_CAP_MODE_SHIFT));
 553:.\Generated_Source\PSoC4/logDataTimer.c ****     captureMode &= (logDataTimer_CTRL_CAP_MODE_MASK);
 554:.\Generated_Source\PSoC4/logDataTimer.c **** 
 555:.\Generated_Source\PSoC4/logDataTimer.c ****     /* Clear the Current Setting */
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 21


 556:.\Generated_Source\PSoC4/logDataTimer.c ****     logDataTimer_CONTROL &= ((uint8)(~logDataTimer_CTRL_CAP_MODE_MASK));
 557:.\Generated_Source\PSoC4/logDataTimer.c **** 
 558:.\Generated_Source\PSoC4/logDataTimer.c ****     /* Write The New Setting */
 559:.\Generated_Source\PSoC4/logDataTimer.c ****     logDataTimer_CONTROL |= captureMode;
 560:.\Generated_Source\PSoC4/logDataTimer.c **** }
 561:.\Generated_Source\PSoC4/logDataTimer.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 562:.\Generated_Source\PSoC4/logDataTimer.c **** 
 563:.\Generated_Source\PSoC4/logDataTimer.c **** 
 564:.\Generated_Source\PSoC4/logDataTimer.c **** #if (logDataTimer_SoftwareTriggerMode)
 565:.\Generated_Source\PSoC4/logDataTimer.c **** 
 566:.\Generated_Source\PSoC4/logDataTimer.c **** 
 567:.\Generated_Source\PSoC4/logDataTimer.c **** /*******************************************************************************
 568:.\Generated_Source\PSoC4/logDataTimer.c **** * Function Name: logDataTimer_SetTriggerMode
 569:.\Generated_Source\PSoC4/logDataTimer.c **** ********************************************************************************
 570:.\Generated_Source\PSoC4/logDataTimer.c **** *
 571:.\Generated_Source\PSoC4/logDataTimer.c **** * Summary:
 572:.\Generated_Source\PSoC4/logDataTimer.c **** *  This function sets the trigger input mode
 573:.\Generated_Source\PSoC4/logDataTimer.c **** *
 574:.\Generated_Source\PSoC4/logDataTimer.c **** * Parameters:
 575:.\Generated_Source\PSoC4/logDataTimer.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 576:.\Generated_Source\PSoC4/logDataTimer.c ****     #define logDataTimer__B_TIMER__TM_NONE 0x00u
 577:.\Generated_Source\PSoC4/logDataTimer.c ****     #define logDataTimer__B_TIMER__TM_RISINGEDGE 0x04u
 578:.\Generated_Source\PSoC4/logDataTimer.c ****     #define logDataTimer__B_TIMER__TM_FALLINGEDGE 0x08u
 579:.\Generated_Source\PSoC4/logDataTimer.c ****     #define logDataTimer__B_TIMER__TM_EITHEREDGE 0x0Cu
 580:.\Generated_Source\PSoC4/logDataTimer.c ****     #define logDataTimer__B_TIMER__TM_SOFTWARE 0x10u
 581:.\Generated_Source\PSoC4/logDataTimer.c **** *
 582:.\Generated_Source\PSoC4/logDataTimer.c **** * Return:
 583:.\Generated_Source\PSoC4/logDataTimer.c **** *  void
 584:.\Generated_Source\PSoC4/logDataTimer.c **** *
 585:.\Generated_Source\PSoC4/logDataTimer.c **** *******************************************************************************/
 586:.\Generated_Source\PSoC4/logDataTimer.c **** void logDataTimer_SetTriggerMode(uint8 triggerMode) 
 587:.\Generated_Source\PSoC4/logDataTimer.c **** {
 588:.\Generated_Source\PSoC4/logDataTimer.c ****     /* This must only set to two bits of the control register associated */
 589:.\Generated_Source\PSoC4/logDataTimer.c ****     triggerMode &= logDataTimer_CTRL_TRIG_MODE_MASK;
 590:.\Generated_Source\PSoC4/logDataTimer.c **** 
 591:.\Generated_Source\PSoC4/logDataTimer.c ****     /* Clear the Current Setting */
 592:.\Generated_Source\PSoC4/logDataTimer.c ****     logDataTimer_CONTROL &= ((uint8)(~logDataTimer_CTRL_TRIG_MODE_MASK));
 593:.\Generated_Source\PSoC4/logDataTimer.c **** 
 594:.\Generated_Source\PSoC4/logDataTimer.c ****     /* Write The New Setting */
 595:.\Generated_Source\PSoC4/logDataTimer.c ****     logDataTimer_CONTROL |= (triggerMode | logDataTimer__B_TIMER__TM_SOFTWARE);
 596:.\Generated_Source\PSoC4/logDataTimer.c **** 
 597:.\Generated_Source\PSoC4/logDataTimer.c **** }
 598:.\Generated_Source\PSoC4/logDataTimer.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 599:.\Generated_Source\PSoC4/logDataTimer.c **** 
 600:.\Generated_Source\PSoC4/logDataTimer.c **** #if (logDataTimer_EnableTriggerMode)
 601:.\Generated_Source\PSoC4/logDataTimer.c **** 
 602:.\Generated_Source\PSoC4/logDataTimer.c **** 
 603:.\Generated_Source\PSoC4/logDataTimer.c **** /*******************************************************************************
 604:.\Generated_Source\PSoC4/logDataTimer.c **** * Function Name: logDataTimer_EnableTrigger
 605:.\Generated_Source\PSoC4/logDataTimer.c **** ********************************************************************************
 606:.\Generated_Source\PSoC4/logDataTimer.c **** *
 607:.\Generated_Source\PSoC4/logDataTimer.c **** * Summary:
 608:.\Generated_Source\PSoC4/logDataTimer.c **** *  Sets the control bit enabling Hardware Trigger mode
 609:.\Generated_Source\PSoC4/logDataTimer.c **** *
 610:.\Generated_Source\PSoC4/logDataTimer.c **** * Parameters:
 611:.\Generated_Source\PSoC4/logDataTimer.c **** *  void
 612:.\Generated_Source\PSoC4/logDataTimer.c **** *
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 22


 613:.\Generated_Source\PSoC4/logDataTimer.c **** * Return:
 614:.\Generated_Source\PSoC4/logDataTimer.c **** *  void
 615:.\Generated_Source\PSoC4/logDataTimer.c **** *
 616:.\Generated_Source\PSoC4/logDataTimer.c **** *******************************************************************************/
 617:.\Generated_Source\PSoC4/logDataTimer.c **** void logDataTimer_EnableTrigger(void) 
 618:.\Generated_Source\PSoC4/logDataTimer.c **** {
 619:.\Generated_Source\PSoC4/logDataTimer.c ****     #if (!logDataTimer_ControlRegRemoved)   /* Remove assignment if control register is removed */
 620:.\Generated_Source\PSoC4/logDataTimer.c ****         logDataTimer_CONTROL |= logDataTimer_CTRL_TRIG_EN;
 621:.\Generated_Source\PSoC4/logDataTimer.c ****     #endif /* Remove code section if control register is not used */
 622:.\Generated_Source\PSoC4/logDataTimer.c **** }
 623:.\Generated_Source\PSoC4/logDataTimer.c **** 
 624:.\Generated_Source\PSoC4/logDataTimer.c **** 
 625:.\Generated_Source\PSoC4/logDataTimer.c **** /*******************************************************************************
 626:.\Generated_Source\PSoC4/logDataTimer.c **** * Function Name: logDataTimer_DisableTrigger
 627:.\Generated_Source\PSoC4/logDataTimer.c **** ********************************************************************************
 628:.\Generated_Source\PSoC4/logDataTimer.c **** *
 629:.\Generated_Source\PSoC4/logDataTimer.c **** * Summary:
 630:.\Generated_Source\PSoC4/logDataTimer.c **** *  Clears the control bit enabling Hardware Trigger mode
 631:.\Generated_Source\PSoC4/logDataTimer.c **** *
 632:.\Generated_Source\PSoC4/logDataTimer.c **** * Parameters:
 633:.\Generated_Source\PSoC4/logDataTimer.c **** *  void
 634:.\Generated_Source\PSoC4/logDataTimer.c **** *
 635:.\Generated_Source\PSoC4/logDataTimer.c **** * Return:
 636:.\Generated_Source\PSoC4/logDataTimer.c **** *  void
 637:.\Generated_Source\PSoC4/logDataTimer.c **** *
 638:.\Generated_Source\PSoC4/logDataTimer.c **** *******************************************************************************/
 639:.\Generated_Source\PSoC4/logDataTimer.c **** void logDataTimer_DisableTrigger(void) 
 640:.\Generated_Source\PSoC4/logDataTimer.c **** {
 641:.\Generated_Source\PSoC4/logDataTimer.c ****     #if (!logDataTimer_ControlRegRemoved)   /* Remove assignment if control register is removed */
 642:.\Generated_Source\PSoC4/logDataTimer.c ****         logDataTimer_CONTROL &= ((uint8)(~logDataTimer_CTRL_TRIG_EN));
 643:.\Generated_Source\PSoC4/logDataTimer.c ****     #endif /* Remove code section if control register is not used */
 644:.\Generated_Source\PSoC4/logDataTimer.c **** }
 645:.\Generated_Source\PSoC4/logDataTimer.c **** #endif /* Remove API is Trigger Mode is set to None */
 646:.\Generated_Source\PSoC4/logDataTimer.c **** 
 647:.\Generated_Source\PSoC4/logDataTimer.c **** 
 648:.\Generated_Source\PSoC4/logDataTimer.c **** #if(logDataTimer_InterruptOnCaptureCount)
 649:.\Generated_Source\PSoC4/logDataTimer.c **** #if (!logDataTimer_ControlRegRemoved)   /* Remove API if control register is removed */
 650:.\Generated_Source\PSoC4/logDataTimer.c **** 
 651:.\Generated_Source\PSoC4/logDataTimer.c **** 
 652:.\Generated_Source\PSoC4/logDataTimer.c **** /*******************************************************************************
 653:.\Generated_Source\PSoC4/logDataTimer.c **** * Function Name: logDataTimer_SetInterruptCount
 654:.\Generated_Source\PSoC4/logDataTimer.c **** ********************************************************************************
 655:.\Generated_Source\PSoC4/logDataTimer.c **** *
 656:.\Generated_Source\PSoC4/logDataTimer.c **** * Summary:
 657:.\Generated_Source\PSoC4/logDataTimer.c **** *  This function sets the capture count before an interrupt is triggered.
 658:.\Generated_Source\PSoC4/logDataTimer.c **** *
 659:.\Generated_Source\PSoC4/logDataTimer.c **** * Parameters:
 660:.\Generated_Source\PSoC4/logDataTimer.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 661:.\Generated_Source\PSoC4/logDataTimer.c **** *                   an interrupt will occur each time a capture occurs.
 662:.\Generated_Source\PSoC4/logDataTimer.c **** *                   A value of 1 to 3 will cause the interrupt
 663:.\Generated_Source\PSoC4/logDataTimer.c **** *                   to delay by the same number of captures.
 664:.\Generated_Source\PSoC4/logDataTimer.c **** *
 665:.\Generated_Source\PSoC4/logDataTimer.c **** * Return:
 666:.\Generated_Source\PSoC4/logDataTimer.c **** *  void
 667:.\Generated_Source\PSoC4/logDataTimer.c **** *
 668:.\Generated_Source\PSoC4/logDataTimer.c **** *******************************************************************************/
 669:.\Generated_Source\PSoC4/logDataTimer.c **** void logDataTimer_SetInterruptCount(uint8 interruptCount) 
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 23


 670:.\Generated_Source\PSoC4/logDataTimer.c **** {
 671:.\Generated_Source\PSoC4/logDataTimer.c ****     /* This must only set to two bits of the control register associated */
 672:.\Generated_Source\PSoC4/logDataTimer.c ****     interruptCount &= logDataTimer_CTRL_INTCNT_MASK;
 673:.\Generated_Source\PSoC4/logDataTimer.c **** 
 674:.\Generated_Source\PSoC4/logDataTimer.c ****     /* Clear the Current Setting */
 675:.\Generated_Source\PSoC4/logDataTimer.c ****     logDataTimer_CONTROL &= ((uint8)(~logDataTimer_CTRL_INTCNT_MASK));
 676:.\Generated_Source\PSoC4/logDataTimer.c ****     /* Write The New Setting */
 677:.\Generated_Source\PSoC4/logDataTimer.c ****     logDataTimer_CONTROL |= interruptCount;
 678:.\Generated_Source\PSoC4/logDataTimer.c **** }
 679:.\Generated_Source\PSoC4/logDataTimer.c **** #endif /* Remove API if control register is removed */
 680:.\Generated_Source\PSoC4/logDataTimer.c **** #endif /* logDataTimer_InterruptOnCaptureCount */
 681:.\Generated_Source\PSoC4/logDataTimer.c **** 
 682:.\Generated_Source\PSoC4/logDataTimer.c **** 
 683:.\Generated_Source\PSoC4/logDataTimer.c **** #if (logDataTimer_UsingHWCaptureCounter)
 684:.\Generated_Source\PSoC4/logDataTimer.c **** 
 685:.\Generated_Source\PSoC4/logDataTimer.c **** 
 686:.\Generated_Source\PSoC4/logDataTimer.c **** /*******************************************************************************
 687:.\Generated_Source\PSoC4/logDataTimer.c **** * Function Name: logDataTimer_SetCaptureCount
 688:.\Generated_Source\PSoC4/logDataTimer.c **** ********************************************************************************
 689:.\Generated_Source\PSoC4/logDataTimer.c **** *
 690:.\Generated_Source\PSoC4/logDataTimer.c **** * Summary:
 691:.\Generated_Source\PSoC4/logDataTimer.c **** *  This function sets the capture count
 692:.\Generated_Source\PSoC4/logDataTimer.c **** *
 693:.\Generated_Source\PSoC4/logDataTimer.c **** * Parameters:
 694:.\Generated_Source\PSoC4/logDataTimer.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 695:.\Generated_Source\PSoC4/logDataTimer.c **** *                to 127 will cause the interrupt to delay by the same number of
 696:.\Generated_Source\PSoC4/logDataTimer.c **** *                captures.
 697:.\Generated_Source\PSoC4/logDataTimer.c **** *
 698:.\Generated_Source\PSoC4/logDataTimer.c **** * Return:
 699:.\Generated_Source\PSoC4/logDataTimer.c **** *  void
 700:.\Generated_Source\PSoC4/logDataTimer.c **** *
 701:.\Generated_Source\PSoC4/logDataTimer.c **** *******************************************************************************/
 702:.\Generated_Source\PSoC4/logDataTimer.c **** void logDataTimer_SetCaptureCount(uint8 captureCount) 
 703:.\Generated_Source\PSoC4/logDataTimer.c **** {
 704:.\Generated_Source\PSoC4/logDataTimer.c ****     logDataTimer_CAP_COUNT = captureCount;
 705:.\Generated_Source\PSoC4/logDataTimer.c **** }
 706:.\Generated_Source\PSoC4/logDataTimer.c **** 
 707:.\Generated_Source\PSoC4/logDataTimer.c **** 
 708:.\Generated_Source\PSoC4/logDataTimer.c **** /*******************************************************************************
 709:.\Generated_Source\PSoC4/logDataTimer.c **** * Function Name: logDataTimer_ReadCaptureCount
 710:.\Generated_Source\PSoC4/logDataTimer.c **** ********************************************************************************
 711:.\Generated_Source\PSoC4/logDataTimer.c **** *
 712:.\Generated_Source\PSoC4/logDataTimer.c **** * Summary:
 713:.\Generated_Source\PSoC4/logDataTimer.c **** *  This function reads the capture count setting
 714:.\Generated_Source\PSoC4/logDataTimer.c **** *
 715:.\Generated_Source\PSoC4/logDataTimer.c **** * Parameters:
 716:.\Generated_Source\PSoC4/logDataTimer.c **** *  void
 717:.\Generated_Source\PSoC4/logDataTimer.c **** *
 718:.\Generated_Source\PSoC4/logDataTimer.c **** * Return:
 719:.\Generated_Source\PSoC4/logDataTimer.c **** *  Returns the Capture Count Setting
 720:.\Generated_Source\PSoC4/logDataTimer.c **** *
 721:.\Generated_Source\PSoC4/logDataTimer.c **** *******************************************************************************/
 722:.\Generated_Source\PSoC4/logDataTimer.c **** uint8 logDataTimer_ReadCaptureCount(void) 
 723:.\Generated_Source\PSoC4/logDataTimer.c **** {
 724:.\Generated_Source\PSoC4/logDataTimer.c ****     return ((uint8)logDataTimer_CAP_COUNT);
 725:.\Generated_Source\PSoC4/logDataTimer.c **** }
 726:.\Generated_Source\PSoC4/logDataTimer.c **** #endif /* logDataTimer_UsingHWCaptureCounter */
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 24


 727:.\Generated_Source\PSoC4/logDataTimer.c **** 
 728:.\Generated_Source\PSoC4/logDataTimer.c **** 
 729:.\Generated_Source\PSoC4/logDataTimer.c **** /*******************************************************************************
 730:.\Generated_Source\PSoC4/logDataTimer.c **** * Function Name: logDataTimer_ClearFIFO
 731:.\Generated_Source\PSoC4/logDataTimer.c **** ********************************************************************************
 732:.\Generated_Source\PSoC4/logDataTimer.c **** *
 733:.\Generated_Source\PSoC4/logDataTimer.c **** * Summary:
 734:.\Generated_Source\PSoC4/logDataTimer.c **** *  This function clears all capture data from the capture FIFO
 735:.\Generated_Source\PSoC4/logDataTimer.c **** *
 736:.\Generated_Source\PSoC4/logDataTimer.c **** * Parameters:
 737:.\Generated_Source\PSoC4/logDataTimer.c **** *  void
 738:.\Generated_Source\PSoC4/logDataTimer.c **** *
 739:.\Generated_Source\PSoC4/logDataTimer.c **** * Return:
 740:.\Generated_Source\PSoC4/logDataTimer.c **** *  void
 741:.\Generated_Source\PSoC4/logDataTimer.c **** *
 742:.\Generated_Source\PSoC4/logDataTimer.c **** *******************************************************************************/
 743:.\Generated_Source\PSoC4/logDataTimer.c **** void logDataTimer_ClearFIFO(void) 
 744:.\Generated_Source\PSoC4/logDataTimer.c **** {
 586              		.loc 1 744 0
 587              		.cfi_startproc
 588 0000 80B5     		push	{r7, lr}
 589              	.LCFI33:
 590              		.cfi_def_cfa_offset 8
 591              		.cfi_offset 7, -8
 592              		.cfi_offset 14, -4
 593 0002 00AF     		add	r7, sp, #0
 594              	.LCFI34:
 595              		.cfi_def_cfa_register 7
 745:.\Generated_Source\PSoC4/logDataTimer.c ****     while(0u != (logDataTimer_ReadStatusRegister() & logDataTimer_STATUS_FIFONEMP))
 596              		.loc 1 745 0
 597 0004 01E0     		b	.L50
 598              	.L51:
 746:.\Generated_Source\PSoC4/logDataTimer.c ****     {
 747:.\Generated_Source\PSoC4/logDataTimer.c ****         (void)logDataTimer_ReadCapture();
 599              		.loc 1 747 0
 600 0006 FFF7FEFF 		bl	logDataTimer_ReadCapture
 601              	.L50:
 745:.\Generated_Source\PSoC4/logDataTimer.c ****     while(0u != (logDataTimer_ReadStatusRegister() & logDataTimer_STATUS_FIFONEMP))
 602              		.loc 1 745 0 discriminator 1
 603 000a FFF7FEFF 		bl	logDataTimer_ReadStatusRegister
 604 000e 031C     		mov	r3, r0
 605 0010 1A1C     		mov	r2, r3
 606 0012 0823     		mov	r3, #8
 607 0014 1340     		and	r3, r2
 608 0016 F6D1     		bne	.L51
 748:.\Generated_Source\PSoC4/logDataTimer.c ****     }
 749:.\Generated_Source\PSoC4/logDataTimer.c **** }
 609              		.loc 1 749 0
 610 0018 BD46     		mov	sp, r7
 611              		@ sp needed for prologue
 612 001a 80BD     		pop	{r7, pc}
 613              		.cfi_endproc
 614              	.LFE14:
 615              		.size	logDataTimer_ClearFIFO, .-logDataTimer_ClearFIFO
 616              		.text
 617              	.Letext0:
 618              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 25


 619              		.section	.debug_info,"",%progbits
 620              	.Ldebug_info0:
 621 0000 81020000 		.4byte	0x281
 622 0004 0200     		.2byte	0x2
 623 0006 00000000 		.4byte	.Ldebug_abbrev0
 624 000a 04       		.byte	0x4
 625 000b 01       		.uleb128 0x1
 626 000c 4F020000 		.4byte	.LASF34
 627 0010 01       		.byte	0x1
 628 0011 F8000000 		.4byte	.LASF35
 629 0015 0B020000 		.4byte	.LASF36
 630 0019 00000000 		.4byte	.Ldebug_ranges0+0
 631 001d 00000000 		.4byte	0
 632 0021 00000000 		.4byte	0
 633 0025 00000000 		.4byte	.Ldebug_line0
 634 0029 02       		.uleb128 0x2
 635 002a 01       		.byte	0x1
 636 002b 06       		.byte	0x6
 637 002c E9020000 		.4byte	.LASF0
 638 0030 02       		.uleb128 0x2
 639 0031 01       		.byte	0x1
 640 0032 08       		.byte	0x8
 641 0033 9C000000 		.4byte	.LASF1
 642 0037 02       		.uleb128 0x2
 643 0038 02       		.byte	0x2
 644 0039 05       		.byte	0x5
 645 003a 2C020000 		.4byte	.LASF2
 646 003e 02       		.uleb128 0x2
 647 003f 02       		.byte	0x2
 648 0040 07       		.byte	0x7
 649 0041 07000000 		.4byte	.LASF3
 650 0045 02       		.uleb128 0x2
 651 0046 04       		.byte	0x4
 652 0047 05       		.byte	0x5
 653 0048 B9020000 		.4byte	.LASF4
 654 004c 02       		.uleb128 0x2
 655 004d 04       		.byte	0x4
 656 004e 07       		.byte	0x7
 657 004f D8000000 		.4byte	.LASF5
 658 0053 02       		.uleb128 0x2
 659 0054 08       		.byte	0x8
 660 0055 05       		.byte	0x5
 661 0056 BC010000 		.4byte	.LASF6
 662 005a 02       		.uleb128 0x2
 663 005b 08       		.byte	0x8
 664 005c 07       		.byte	0x7
 665 005d 9C010000 		.4byte	.LASF7
 666 0061 03       		.uleb128 0x3
 667 0062 04       		.byte	0x4
 668 0063 05       		.byte	0x5
 669 0064 696E7400 		.ascii	"int\000"
 670 0068 02       		.uleb128 0x2
 671 0069 04       		.byte	0x4
 672 006a 07       		.byte	0x7
 673 006b 7D010000 		.4byte	.LASF8
 674 006f 04       		.uleb128 0x4
 675 0070 EA000000 		.4byte	.LASF12
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 26


 676 0074 02       		.byte	0x2
 677 0075 5B       		.byte	0x5b
 678 0076 30000000 		.4byte	0x30
 679 007a 02       		.uleb128 0x2
 680 007b 04       		.byte	0x4
 681 007c 04       		.byte	0x4
 682 007d 8E000000 		.4byte	.LASF9
 683 0081 02       		.uleb128 0x2
 684 0082 08       		.byte	0x8
 685 0083 04       		.byte	0x4
 686 0084 20010000 		.4byte	.LASF10
 687 0088 02       		.uleb128 0x2
 688 0089 01       		.byte	0x1
 689 008a 08       		.byte	0x8
 690 008b C2020000 		.4byte	.LASF11
 691 008f 04       		.uleb128 0x4
 692 0090 AA000000 		.4byte	.LASF13
 693 0094 02       		.byte	0x2
 694 0095 F0       		.byte	0xf0
 695 0096 9A000000 		.4byte	0x9a
 696 009a 05       		.uleb128 0x5
 697 009b 6F000000 		.4byte	0x6f
 698 009f 02       		.uleb128 0x2
 699 00a0 04       		.byte	0x4
 700 00a1 07       		.byte	0x7
 701 00a2 B3010000 		.4byte	.LASF14
 702 00a6 06       		.uleb128 0x6
 703 00a7 01       		.byte	0x1
 704 00a8 69000000 		.4byte	.LASF18
 705 00ac 01       		.byte	0x1
 706 00ad 2B       		.byte	0x2b
 707 00ae 01       		.byte	0x1
 708 00af 00000000 		.4byte	.LFB0
 709 00b3 4C000000 		.4byte	.LFE0
 710 00b7 00000000 		.4byte	.LLST0
 711 00bb 01       		.byte	0x1
 712 00bc CF000000 		.4byte	0xcf
 713 00c0 07       		.uleb128 0x7
 714 00c1 CA010000 		.4byte	.LASF37
 715 00c5 01       		.byte	0x1
 716 00c6 2F       		.byte	0x2f
 717 00c7 6F000000 		.4byte	0x6f
 718 00cb 02       		.byte	0x2
 719 00cc 91       		.byte	0x91
 720 00cd 6F       		.sleb128 -17
 721 00ce 00       		.byte	0
 722 00cf 08       		.uleb128 0x8
 723 00d0 01       		.byte	0x1
 724 00d1 AF000000 		.4byte	.LASF15
 725 00d5 01       		.byte	0x1
 726 00d6 B3       		.byte	0xb3
 727 00d7 01       		.byte	0x1
 728 00d8 00000000 		.4byte	.LFB1
 729 00dc 20000000 		.4byte	.LFE1
 730 00e0 38000000 		.4byte	.LLST1
 731 00e4 01       		.byte	0x1
 732 00e5 09       		.uleb128 0x9
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 27


 733 00e6 01       		.byte	0x1
 734 00e7 7B000000 		.4byte	.LASF16
 735 00eb 01       		.byte	0x1
 736 00ec D6       		.byte	0xd6
 737 00ed 01       		.byte	0x1
 738 00ee 00000000 		.4byte	.LFB2
 739 00f2 24000000 		.4byte	.LFE2
 740 00f6 64000000 		.4byte	.LLST2
 741 00fa 01       		.byte	0x1
 742 00fb 08       		.uleb128 0x8
 743 00fc 01       		.byte	0x1
 744 00fd 8A010000 		.4byte	.LASF17
 745 0101 01       		.byte	0x1
 746 0102 F6       		.byte	0xf6
 747 0103 01       		.byte	0x1
 748 0104 00000000 		.4byte	.LFB3
 749 0108 1C000000 		.4byte	.LFE3
 750 010c 90000000 		.4byte	.LLST3
 751 0110 01       		.byte	0x1
 752 0111 0A       		.uleb128 0xa
 753 0112 01       		.byte	0x1
 754 0113 1A000000 		.4byte	.LASF19
 755 0117 01       		.byte	0x1
 756 0118 1601     		.2byte	0x116
 757 011a 01       		.byte	0x1
 758 011b 00000000 		.4byte	.LFB4
 759 011f 20000000 		.4byte	.LFE4
 760 0123 BC000000 		.4byte	.LLST4
 761 0127 01       		.byte	0x1
 762 0128 3C010000 		.4byte	0x13c
 763 012c 0B       		.uleb128 0xb
 764 012d E6010000 		.4byte	.LASF24
 765 0131 01       		.byte	0x1
 766 0132 1601     		.2byte	0x116
 767 0134 6F000000 		.4byte	0x6f
 768 0138 02       		.byte	0x2
 769 0139 91       		.byte	0x91
 770 013a 77       		.sleb128 -9
 771 013b 00       		.byte	0
 772 013c 0C       		.uleb128 0xc
 773 013d 01       		.byte	0x1
 774 013e 60010000 		.4byte	.LASF20
 775 0142 01       		.byte	0x1
 776 0143 2D01     		.2byte	0x12d
 777 0145 01       		.byte	0x1
 778 0146 00000000 		.4byte	.LFB5
 779 014a 10000000 		.4byte	.LFE5
 780 014e F4000000 		.4byte	.LLST5
 781 0152 01       		.byte	0x1
 782 0153 0D       		.uleb128 0xd
 783 0154 01       		.byte	0x1
 784 0155 27010000 		.4byte	.LASF21
 785 0159 01       		.byte	0x1
 786 015a 4801     		.2byte	0x148
 787 015c 01       		.byte	0x1
 788 015d 6F000000 		.4byte	0x6f
 789 0161 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 28


 790 0165 14000000 		.4byte	.LFE6
 791 0169 20010000 		.4byte	.LLST6
 792 016d 01       		.byte	0x1
 793 016e 0D       		.uleb128 0xd
 794 016f 01       		.byte	0x1
 795 0170 98020000 		.4byte	.LASF22
 796 0174 01       		.byte	0x1
 797 0175 5F01     		.2byte	0x15f
 798 0177 01       		.byte	0x1
 799 0178 6F000000 		.4byte	0x6f
 800 017c 00000000 		.4byte	.LFB7
 801 0180 14000000 		.4byte	.LFE7
 802 0184 4C010000 		.4byte	.LLST7
 803 0188 01       		.byte	0x1
 804 0189 0A       		.uleb128 0xa
 805 018a 01       		.byte	0x1
 806 018b C7020000 		.4byte	.LASF23
 807 018f 01       		.byte	0x1
 808 0190 7201     		.2byte	0x172
 809 0192 01       		.byte	0x1
 810 0193 00000000 		.4byte	.LFB8
 811 0197 20000000 		.4byte	.LFE8
 812 019b 78010000 		.4byte	.LLST8
 813 019f 01       		.byte	0x1
 814 01a0 B4010000 		.4byte	0x1b4
 815 01a4 0B       		.uleb128 0xb
 816 01a5 F0000000 		.4byte	.LASF25
 817 01a9 01       		.byte	0x1
 818 01aa 7201     		.2byte	0x172
 819 01ac 6F000000 		.4byte	0x6f
 820 01b0 02       		.byte	0x2
 821 01b1 91       		.byte	0x91
 822 01b2 77       		.sleb128 -9
 823 01b3 00       		.byte	0
 824 01b4 0D       		.uleb128 0xd
 825 01b5 01       		.byte	0x1
 826 01b6 51000000 		.4byte	.LASF26
 827 01ba 01       		.byte	0x1
 828 01bb 8701     		.2byte	0x187
 829 01bd 01       		.byte	0x1
 830 01be 6F000000 		.4byte	0x6f
 831 01c2 00000000 		.4byte	.LFB9
 832 01c6 14000000 		.4byte	.LFE9
 833 01ca B0010000 		.4byte	.LLST9
 834 01ce 01       		.byte	0x1
 835 01cf 0A       		.uleb128 0xa
 836 01d0 01       		.byte	0x1
 837 01d1 36020000 		.4byte	.LASF27
 838 01d5 01       		.byte	0x1
 839 01d6 A101     		.2byte	0x1a1
 840 01d8 01       		.byte	0x1
 841 01d9 00000000 		.4byte	.LFB10
 842 01dd 20000000 		.4byte	.LFE10
 843 01e1 DC010000 		.4byte	.LLST10
 844 01e5 01       		.byte	0x1
 845 01e6 FA010000 		.4byte	0x1fa
 846 01ea 0B       		.uleb128 0xb
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 29


 847 01eb 00000000 		.4byte	.LASF28
 848 01ef 01       		.byte	0x1
 849 01f0 A101     		.2byte	0x1a1
 850 01f2 6F000000 		.4byte	0x6f
 851 01f6 02       		.byte	0x2
 852 01f7 91       		.byte	0x91
 853 01f8 77       		.sleb128 -9
 854 01f9 00       		.byte	0
 855 01fa 0D       		.uleb128 0xd
 856 01fb 01       		.byte	0x1
 857 01fc 38000000 		.4byte	.LASF29
 858 0200 01       		.byte	0x1
 859 0201 BA01     		.2byte	0x1ba
 860 0203 01       		.byte	0x1
 861 0204 6F000000 		.4byte	0x6f
 862 0208 00000000 		.4byte	.LFB11
 863 020c 14000000 		.4byte	.LFE11
 864 0210 14020000 		.4byte	.LLST11
 865 0214 01       		.byte	0x1
 866 0215 0A       		.uleb128 0xa
 867 0216 01       		.byte	0x1
 868 0217 F5020000 		.4byte	.LASF30
 869 021b 01       		.byte	0x1
 870 021c D201     		.2byte	0x1d2
 871 021e 01       		.byte	0x1
 872 021f 00000000 		.4byte	.LFB12
 873 0223 20000000 		.4byte	.LFE12
 874 0227 40020000 		.4byte	.LLST12
 875 022b 01       		.byte	0x1
 876 022c 40020000 		.4byte	0x240
 877 0230 0B       		.uleb128 0xb
 878 0231 94000000 		.4byte	.LASF31
 879 0235 01       		.byte	0x1
 880 0236 D201     		.2byte	0x1d2
 881 0238 6F000000 		.4byte	0x6f
 882 023c 02       		.byte	0x2
 883 023d 91       		.byte	0x91
 884 023e 77       		.sleb128 -9
 885 023f 00       		.byte	0
 886 0240 0D       		.uleb128 0xd
 887 0241 01       		.byte	0x1
 888 0242 47010000 		.4byte	.LASF32
 889 0246 01       		.byte	0x1
 890 0247 EF01     		.2byte	0x1ef
 891 0249 01       		.byte	0x1
 892 024a 6F000000 		.4byte	0x6f
 893 024e 00000000 		.4byte	.LFB13
 894 0252 1C000000 		.4byte	.LFE13
 895 0256 78020000 		.4byte	.LLST13
 896 025a 01       		.byte	0x1
 897 025b 0E       		.uleb128 0xe
 898 025c 01       		.byte	0x1
 899 025d F4010000 		.4byte	.LASF33
 900 0261 01       		.byte	0x1
 901 0262 E702     		.2byte	0x2e7
 902 0264 01       		.byte	0x1
 903 0265 00000000 		.4byte	.LFB14
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 30


 904 0269 1C000000 		.4byte	.LFE14
 905 026d A4020000 		.4byte	.LLST14
 906 0271 01       		.byte	0x1
 907 0272 0F       		.uleb128 0xf
 908 0273 C3000000 		.4byte	.LASF38
 909 0277 01       		.byte	0x1
 910 0278 1A       		.byte	0x1a
 911 0279 6F000000 		.4byte	0x6f
 912 027d 01       		.byte	0x1
 913 027e 05       		.byte	0x5
 914 027f 03       		.byte	0x3
 915 0280 00000000 		.4byte	logDataTimer_initVar
 916 0284 00       		.byte	0
 917              		.section	.debug_abbrev,"",%progbits
 918              	.Ldebug_abbrev0:
 919 0000 01       		.uleb128 0x1
 920 0001 11       		.uleb128 0x11
 921 0002 01       		.byte	0x1
 922 0003 25       		.uleb128 0x25
 923 0004 0E       		.uleb128 0xe
 924 0005 13       		.uleb128 0x13
 925 0006 0B       		.uleb128 0xb
 926 0007 03       		.uleb128 0x3
 927 0008 0E       		.uleb128 0xe
 928 0009 1B       		.uleb128 0x1b
 929 000a 0E       		.uleb128 0xe
 930 000b 55       		.uleb128 0x55
 931 000c 06       		.uleb128 0x6
 932 000d 11       		.uleb128 0x11
 933 000e 01       		.uleb128 0x1
 934 000f 52       		.uleb128 0x52
 935 0010 01       		.uleb128 0x1
 936 0011 10       		.uleb128 0x10
 937 0012 06       		.uleb128 0x6
 938 0013 00       		.byte	0
 939 0014 00       		.byte	0
 940 0015 02       		.uleb128 0x2
 941 0016 24       		.uleb128 0x24
 942 0017 00       		.byte	0
 943 0018 0B       		.uleb128 0xb
 944 0019 0B       		.uleb128 0xb
 945 001a 3E       		.uleb128 0x3e
 946 001b 0B       		.uleb128 0xb
 947 001c 03       		.uleb128 0x3
 948 001d 0E       		.uleb128 0xe
 949 001e 00       		.byte	0
 950 001f 00       		.byte	0
 951 0020 03       		.uleb128 0x3
 952 0021 24       		.uleb128 0x24
 953 0022 00       		.byte	0
 954 0023 0B       		.uleb128 0xb
 955 0024 0B       		.uleb128 0xb
 956 0025 3E       		.uleb128 0x3e
 957 0026 0B       		.uleb128 0xb
 958 0027 03       		.uleb128 0x3
 959 0028 08       		.uleb128 0x8
 960 0029 00       		.byte	0
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 31


 961 002a 00       		.byte	0
 962 002b 04       		.uleb128 0x4
 963 002c 16       		.uleb128 0x16
 964 002d 00       		.byte	0
 965 002e 03       		.uleb128 0x3
 966 002f 0E       		.uleb128 0xe
 967 0030 3A       		.uleb128 0x3a
 968 0031 0B       		.uleb128 0xb
 969 0032 3B       		.uleb128 0x3b
 970 0033 0B       		.uleb128 0xb
 971 0034 49       		.uleb128 0x49
 972 0035 13       		.uleb128 0x13
 973 0036 00       		.byte	0
 974 0037 00       		.byte	0
 975 0038 05       		.uleb128 0x5
 976 0039 35       		.uleb128 0x35
 977 003a 00       		.byte	0
 978 003b 49       		.uleb128 0x49
 979 003c 13       		.uleb128 0x13
 980 003d 00       		.byte	0
 981 003e 00       		.byte	0
 982 003f 06       		.uleb128 0x6
 983 0040 2E       		.uleb128 0x2e
 984 0041 01       		.byte	0x1
 985 0042 3F       		.uleb128 0x3f
 986 0043 0C       		.uleb128 0xc
 987 0044 03       		.uleb128 0x3
 988 0045 0E       		.uleb128 0xe
 989 0046 3A       		.uleb128 0x3a
 990 0047 0B       		.uleb128 0xb
 991 0048 3B       		.uleb128 0x3b
 992 0049 0B       		.uleb128 0xb
 993 004a 27       		.uleb128 0x27
 994 004b 0C       		.uleb128 0xc
 995 004c 11       		.uleb128 0x11
 996 004d 01       		.uleb128 0x1
 997 004e 12       		.uleb128 0x12
 998 004f 01       		.uleb128 0x1
 999 0050 40       		.uleb128 0x40
 1000 0051 06       		.uleb128 0x6
 1001 0052 9642     		.uleb128 0x2116
 1002 0054 0C       		.uleb128 0xc
 1003 0055 01       		.uleb128 0x1
 1004 0056 13       		.uleb128 0x13
 1005 0057 00       		.byte	0
 1006 0058 00       		.byte	0
 1007 0059 07       		.uleb128 0x7
 1008 005a 34       		.uleb128 0x34
 1009 005b 00       		.byte	0
 1010 005c 03       		.uleb128 0x3
 1011 005d 0E       		.uleb128 0xe
 1012 005e 3A       		.uleb128 0x3a
 1013 005f 0B       		.uleb128 0xb
 1014 0060 3B       		.uleb128 0x3b
 1015 0061 0B       		.uleb128 0xb
 1016 0062 49       		.uleb128 0x49
 1017 0063 13       		.uleb128 0x13
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 32


 1018 0064 02       		.uleb128 0x2
 1019 0065 0A       		.uleb128 0xa
 1020 0066 00       		.byte	0
 1021 0067 00       		.byte	0
 1022 0068 08       		.uleb128 0x8
 1023 0069 2E       		.uleb128 0x2e
 1024 006a 00       		.byte	0
 1025 006b 3F       		.uleb128 0x3f
 1026 006c 0C       		.uleb128 0xc
 1027 006d 03       		.uleb128 0x3
 1028 006e 0E       		.uleb128 0xe
 1029 006f 3A       		.uleb128 0x3a
 1030 0070 0B       		.uleb128 0xb
 1031 0071 3B       		.uleb128 0x3b
 1032 0072 0B       		.uleb128 0xb
 1033 0073 27       		.uleb128 0x27
 1034 0074 0C       		.uleb128 0xc
 1035 0075 11       		.uleb128 0x11
 1036 0076 01       		.uleb128 0x1
 1037 0077 12       		.uleb128 0x12
 1038 0078 01       		.uleb128 0x1
 1039 0079 40       		.uleb128 0x40
 1040 007a 06       		.uleb128 0x6
 1041 007b 9742     		.uleb128 0x2117
 1042 007d 0C       		.uleb128 0xc
 1043 007e 00       		.byte	0
 1044 007f 00       		.byte	0
 1045 0080 09       		.uleb128 0x9
 1046 0081 2E       		.uleb128 0x2e
 1047 0082 00       		.byte	0
 1048 0083 3F       		.uleb128 0x3f
 1049 0084 0C       		.uleb128 0xc
 1050 0085 03       		.uleb128 0x3
 1051 0086 0E       		.uleb128 0xe
 1052 0087 3A       		.uleb128 0x3a
 1053 0088 0B       		.uleb128 0xb
 1054 0089 3B       		.uleb128 0x3b
 1055 008a 0B       		.uleb128 0xb
 1056 008b 27       		.uleb128 0x27
 1057 008c 0C       		.uleb128 0xc
 1058 008d 11       		.uleb128 0x11
 1059 008e 01       		.uleb128 0x1
 1060 008f 12       		.uleb128 0x12
 1061 0090 01       		.uleb128 0x1
 1062 0091 40       		.uleb128 0x40
 1063 0092 06       		.uleb128 0x6
 1064 0093 9642     		.uleb128 0x2116
 1065 0095 0C       		.uleb128 0xc
 1066 0096 00       		.byte	0
 1067 0097 00       		.byte	0
 1068 0098 0A       		.uleb128 0xa
 1069 0099 2E       		.uleb128 0x2e
 1070 009a 01       		.byte	0x1
 1071 009b 3F       		.uleb128 0x3f
 1072 009c 0C       		.uleb128 0xc
 1073 009d 03       		.uleb128 0x3
 1074 009e 0E       		.uleb128 0xe
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 33


 1075 009f 3A       		.uleb128 0x3a
 1076 00a0 0B       		.uleb128 0xb
 1077 00a1 3B       		.uleb128 0x3b
 1078 00a2 05       		.uleb128 0x5
 1079 00a3 27       		.uleb128 0x27
 1080 00a4 0C       		.uleb128 0xc
 1081 00a5 11       		.uleb128 0x11
 1082 00a6 01       		.uleb128 0x1
 1083 00a7 12       		.uleb128 0x12
 1084 00a8 01       		.uleb128 0x1
 1085 00a9 40       		.uleb128 0x40
 1086 00aa 06       		.uleb128 0x6
 1087 00ab 9742     		.uleb128 0x2117
 1088 00ad 0C       		.uleb128 0xc
 1089 00ae 01       		.uleb128 0x1
 1090 00af 13       		.uleb128 0x13
 1091 00b0 00       		.byte	0
 1092 00b1 00       		.byte	0
 1093 00b2 0B       		.uleb128 0xb
 1094 00b3 05       		.uleb128 0x5
 1095 00b4 00       		.byte	0
 1096 00b5 03       		.uleb128 0x3
 1097 00b6 0E       		.uleb128 0xe
 1098 00b7 3A       		.uleb128 0x3a
 1099 00b8 0B       		.uleb128 0xb
 1100 00b9 3B       		.uleb128 0x3b
 1101 00ba 05       		.uleb128 0x5
 1102 00bb 49       		.uleb128 0x49
 1103 00bc 13       		.uleb128 0x13
 1104 00bd 02       		.uleb128 0x2
 1105 00be 0A       		.uleb128 0xa
 1106 00bf 00       		.byte	0
 1107 00c0 00       		.byte	0
 1108 00c1 0C       		.uleb128 0xc
 1109 00c2 2E       		.uleb128 0x2e
 1110 00c3 00       		.byte	0
 1111 00c4 3F       		.uleb128 0x3f
 1112 00c5 0C       		.uleb128 0xc
 1113 00c6 03       		.uleb128 0x3
 1114 00c7 0E       		.uleb128 0xe
 1115 00c8 3A       		.uleb128 0x3a
 1116 00c9 0B       		.uleb128 0xb
 1117 00ca 3B       		.uleb128 0x3b
 1118 00cb 05       		.uleb128 0x5
 1119 00cc 27       		.uleb128 0x27
 1120 00cd 0C       		.uleb128 0xc
 1121 00ce 11       		.uleb128 0x11
 1122 00cf 01       		.uleb128 0x1
 1123 00d0 12       		.uleb128 0x12
 1124 00d1 01       		.uleb128 0x1
 1125 00d2 40       		.uleb128 0x40
 1126 00d3 06       		.uleb128 0x6
 1127 00d4 9742     		.uleb128 0x2117
 1128 00d6 0C       		.uleb128 0xc
 1129 00d7 00       		.byte	0
 1130 00d8 00       		.byte	0
 1131 00d9 0D       		.uleb128 0xd
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 34


 1132 00da 2E       		.uleb128 0x2e
 1133 00db 00       		.byte	0
 1134 00dc 3F       		.uleb128 0x3f
 1135 00dd 0C       		.uleb128 0xc
 1136 00de 03       		.uleb128 0x3
 1137 00df 0E       		.uleb128 0xe
 1138 00e0 3A       		.uleb128 0x3a
 1139 00e1 0B       		.uleb128 0xb
 1140 00e2 3B       		.uleb128 0x3b
 1141 00e3 05       		.uleb128 0x5
 1142 00e4 27       		.uleb128 0x27
 1143 00e5 0C       		.uleb128 0xc
 1144 00e6 49       		.uleb128 0x49
 1145 00e7 13       		.uleb128 0x13
 1146 00e8 11       		.uleb128 0x11
 1147 00e9 01       		.uleb128 0x1
 1148 00ea 12       		.uleb128 0x12
 1149 00eb 01       		.uleb128 0x1
 1150 00ec 40       		.uleb128 0x40
 1151 00ed 06       		.uleb128 0x6
 1152 00ee 9742     		.uleb128 0x2117
 1153 00f0 0C       		.uleb128 0xc
 1154 00f1 00       		.byte	0
 1155 00f2 00       		.byte	0
 1156 00f3 0E       		.uleb128 0xe
 1157 00f4 2E       		.uleb128 0x2e
 1158 00f5 00       		.byte	0
 1159 00f6 3F       		.uleb128 0x3f
 1160 00f7 0C       		.uleb128 0xc
 1161 00f8 03       		.uleb128 0x3
 1162 00f9 0E       		.uleb128 0xe
 1163 00fa 3A       		.uleb128 0x3a
 1164 00fb 0B       		.uleb128 0xb
 1165 00fc 3B       		.uleb128 0x3b
 1166 00fd 05       		.uleb128 0x5
 1167 00fe 27       		.uleb128 0x27
 1168 00ff 0C       		.uleb128 0xc
 1169 0100 11       		.uleb128 0x11
 1170 0101 01       		.uleb128 0x1
 1171 0102 12       		.uleb128 0x12
 1172 0103 01       		.uleb128 0x1
 1173 0104 40       		.uleb128 0x40
 1174 0105 06       		.uleb128 0x6
 1175 0106 9642     		.uleb128 0x2116
 1176 0108 0C       		.uleb128 0xc
 1177 0109 00       		.byte	0
 1178 010a 00       		.byte	0
 1179 010b 0F       		.uleb128 0xf
 1180 010c 34       		.uleb128 0x34
 1181 010d 00       		.byte	0
 1182 010e 03       		.uleb128 0x3
 1183 010f 0E       		.uleb128 0xe
 1184 0110 3A       		.uleb128 0x3a
 1185 0111 0B       		.uleb128 0xb
 1186 0112 3B       		.uleb128 0x3b
 1187 0113 0B       		.uleb128 0xb
 1188 0114 49       		.uleb128 0x49
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 35


 1189 0115 13       		.uleb128 0x13
 1190 0116 3F       		.uleb128 0x3f
 1191 0117 0C       		.uleb128 0xc
 1192 0118 02       		.uleb128 0x2
 1193 0119 0A       		.uleb128 0xa
 1194 011a 00       		.byte	0
 1195 011b 00       		.byte	0
 1196 011c 00       		.byte	0
 1197              		.section	.debug_loc,"",%progbits
 1198              	.Ldebug_loc0:
 1199              	.LLST0:
 1200 0000 00000000 		.4byte	.LFB0
 1201 0004 02000000 		.4byte	.LCFI0
 1202 0008 0200     		.2byte	0x2
 1203 000a 7D       		.byte	0x7d
 1204 000b 00       		.sleb128 0
 1205 000c 02000000 		.4byte	.LCFI0
 1206 0010 04000000 		.4byte	.LCFI1
 1207 0014 0200     		.2byte	0x2
 1208 0016 7D       		.byte	0x7d
 1209 0017 0C       		.sleb128 12
 1210 0018 04000000 		.4byte	.LCFI1
 1211 001c 06000000 		.4byte	.LCFI2
 1212 0020 0200     		.2byte	0x2
 1213 0022 7D       		.byte	0x7d
 1214 0023 18       		.sleb128 24
 1215 0024 06000000 		.4byte	.LCFI2
 1216 0028 4C000000 		.4byte	.LFE0
 1217 002c 0200     		.2byte	0x2
 1218 002e 77       		.byte	0x77
 1219 002f 18       		.sleb128 24
 1220 0030 00000000 		.4byte	0
 1221 0034 00000000 		.4byte	0
 1222              	.LLST1:
 1223 0038 00000000 		.4byte	.LFB1
 1224 003c 02000000 		.4byte	.LCFI3
 1225 0040 0200     		.2byte	0x2
 1226 0042 7D       		.byte	0x7d
 1227 0043 00       		.sleb128 0
 1228 0044 02000000 		.4byte	.LCFI3
 1229 0048 04000000 		.4byte	.LCFI4
 1230 004c 0200     		.2byte	0x2
 1231 004e 7D       		.byte	0x7d
 1232 004f 08       		.sleb128 8
 1233 0050 04000000 		.4byte	.LCFI4
 1234 0054 20000000 		.4byte	.LFE1
 1235 0058 0200     		.2byte	0x2
 1236 005a 77       		.byte	0x77
 1237 005b 08       		.sleb128 8
 1238 005c 00000000 		.4byte	0
 1239 0060 00000000 		.4byte	0
 1240              	.LLST2:
 1241 0064 00000000 		.4byte	.LFB2
 1242 0068 02000000 		.4byte	.LCFI5
 1243 006c 0200     		.2byte	0x2
 1244 006e 7D       		.byte	0x7d
 1245 006f 00       		.sleb128 0
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 36


 1246 0070 02000000 		.4byte	.LCFI5
 1247 0074 04000000 		.4byte	.LCFI6
 1248 0078 0200     		.2byte	0x2
 1249 007a 7D       		.byte	0x7d
 1250 007b 08       		.sleb128 8
 1251 007c 04000000 		.4byte	.LCFI6
 1252 0080 24000000 		.4byte	.LFE2
 1253 0084 0200     		.2byte	0x2
 1254 0086 77       		.byte	0x77
 1255 0087 08       		.sleb128 8
 1256 0088 00000000 		.4byte	0
 1257 008c 00000000 		.4byte	0
 1258              	.LLST3:
 1259 0090 00000000 		.4byte	.LFB3
 1260 0094 02000000 		.4byte	.LCFI7
 1261 0098 0200     		.2byte	0x2
 1262 009a 7D       		.byte	0x7d
 1263 009b 00       		.sleb128 0
 1264 009c 02000000 		.4byte	.LCFI7
 1265 00a0 04000000 		.4byte	.LCFI8
 1266 00a4 0200     		.2byte	0x2
 1267 00a6 7D       		.byte	0x7d
 1268 00a7 08       		.sleb128 8
 1269 00a8 04000000 		.4byte	.LCFI8
 1270 00ac 1C000000 		.4byte	.LFE3
 1271 00b0 0200     		.2byte	0x2
 1272 00b2 77       		.byte	0x77
 1273 00b3 08       		.sleb128 8
 1274 00b4 00000000 		.4byte	0
 1275 00b8 00000000 		.4byte	0
 1276              	.LLST4:
 1277 00bc 00000000 		.4byte	.LFB4
 1278 00c0 02000000 		.4byte	.LCFI9
 1279 00c4 0200     		.2byte	0x2
 1280 00c6 7D       		.byte	0x7d
 1281 00c7 00       		.sleb128 0
 1282 00c8 02000000 		.4byte	.LCFI9
 1283 00cc 04000000 		.4byte	.LCFI10
 1284 00d0 0200     		.2byte	0x2
 1285 00d2 7D       		.byte	0x7d
 1286 00d3 08       		.sleb128 8
 1287 00d4 04000000 		.4byte	.LCFI10
 1288 00d8 06000000 		.4byte	.LCFI11
 1289 00dc 0200     		.2byte	0x2
 1290 00de 7D       		.byte	0x7d
 1291 00df 10       		.sleb128 16
 1292 00e0 06000000 		.4byte	.LCFI11
 1293 00e4 20000000 		.4byte	.LFE4
 1294 00e8 0200     		.2byte	0x2
 1295 00ea 77       		.byte	0x77
 1296 00eb 10       		.sleb128 16
 1297 00ec 00000000 		.4byte	0
 1298 00f0 00000000 		.4byte	0
 1299              	.LLST5:
 1300 00f4 00000000 		.4byte	.LFB5
 1301 00f8 02000000 		.4byte	.LCFI12
 1302 00fc 0200     		.2byte	0x2
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 37


 1303 00fe 7D       		.byte	0x7d
 1304 00ff 00       		.sleb128 0
 1305 0100 02000000 		.4byte	.LCFI12
 1306 0104 04000000 		.4byte	.LCFI13
 1307 0108 0200     		.2byte	0x2
 1308 010a 7D       		.byte	0x7d
 1309 010b 08       		.sleb128 8
 1310 010c 04000000 		.4byte	.LCFI13
 1311 0110 10000000 		.4byte	.LFE5
 1312 0114 0200     		.2byte	0x2
 1313 0116 77       		.byte	0x77
 1314 0117 08       		.sleb128 8
 1315 0118 00000000 		.4byte	0
 1316 011c 00000000 		.4byte	0
 1317              	.LLST6:
 1318 0120 00000000 		.4byte	.LFB6
 1319 0124 02000000 		.4byte	.LCFI14
 1320 0128 0200     		.2byte	0x2
 1321 012a 7D       		.byte	0x7d
 1322 012b 00       		.sleb128 0
 1323 012c 02000000 		.4byte	.LCFI14
 1324 0130 04000000 		.4byte	.LCFI15
 1325 0134 0200     		.2byte	0x2
 1326 0136 7D       		.byte	0x7d
 1327 0137 08       		.sleb128 8
 1328 0138 04000000 		.4byte	.LCFI15
 1329 013c 14000000 		.4byte	.LFE6
 1330 0140 0200     		.2byte	0x2
 1331 0142 77       		.byte	0x77
 1332 0143 08       		.sleb128 8
 1333 0144 00000000 		.4byte	0
 1334 0148 00000000 		.4byte	0
 1335              	.LLST7:
 1336 014c 00000000 		.4byte	.LFB7
 1337 0150 02000000 		.4byte	.LCFI16
 1338 0154 0200     		.2byte	0x2
 1339 0156 7D       		.byte	0x7d
 1340 0157 00       		.sleb128 0
 1341 0158 02000000 		.4byte	.LCFI16
 1342 015c 04000000 		.4byte	.LCFI17
 1343 0160 0200     		.2byte	0x2
 1344 0162 7D       		.byte	0x7d
 1345 0163 08       		.sleb128 8
 1346 0164 04000000 		.4byte	.LCFI17
 1347 0168 14000000 		.4byte	.LFE7
 1348 016c 0200     		.2byte	0x2
 1349 016e 77       		.byte	0x77
 1350 016f 08       		.sleb128 8
 1351 0170 00000000 		.4byte	0
 1352 0174 00000000 		.4byte	0
 1353              	.LLST8:
 1354 0178 00000000 		.4byte	.LFB8
 1355 017c 02000000 		.4byte	.LCFI18
 1356 0180 0200     		.2byte	0x2
 1357 0182 7D       		.byte	0x7d
 1358 0183 00       		.sleb128 0
 1359 0184 02000000 		.4byte	.LCFI18
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 38


 1360 0188 04000000 		.4byte	.LCFI19
 1361 018c 0200     		.2byte	0x2
 1362 018e 7D       		.byte	0x7d
 1363 018f 08       		.sleb128 8
 1364 0190 04000000 		.4byte	.LCFI19
 1365 0194 06000000 		.4byte	.LCFI20
 1366 0198 0200     		.2byte	0x2
 1367 019a 7D       		.byte	0x7d
 1368 019b 10       		.sleb128 16
 1369 019c 06000000 		.4byte	.LCFI20
 1370 01a0 20000000 		.4byte	.LFE8
 1371 01a4 0200     		.2byte	0x2
 1372 01a6 77       		.byte	0x77
 1373 01a7 10       		.sleb128 16
 1374 01a8 00000000 		.4byte	0
 1375 01ac 00000000 		.4byte	0
 1376              	.LLST9:
 1377 01b0 00000000 		.4byte	.LFB9
 1378 01b4 02000000 		.4byte	.LCFI21
 1379 01b8 0200     		.2byte	0x2
 1380 01ba 7D       		.byte	0x7d
 1381 01bb 00       		.sleb128 0
 1382 01bc 02000000 		.4byte	.LCFI21
 1383 01c0 04000000 		.4byte	.LCFI22
 1384 01c4 0200     		.2byte	0x2
 1385 01c6 7D       		.byte	0x7d
 1386 01c7 08       		.sleb128 8
 1387 01c8 04000000 		.4byte	.LCFI22
 1388 01cc 14000000 		.4byte	.LFE9
 1389 01d0 0200     		.2byte	0x2
 1390 01d2 77       		.byte	0x77
 1391 01d3 08       		.sleb128 8
 1392 01d4 00000000 		.4byte	0
 1393 01d8 00000000 		.4byte	0
 1394              	.LLST10:
 1395 01dc 00000000 		.4byte	.LFB10
 1396 01e0 02000000 		.4byte	.LCFI23
 1397 01e4 0200     		.2byte	0x2
 1398 01e6 7D       		.byte	0x7d
 1399 01e7 00       		.sleb128 0
 1400 01e8 02000000 		.4byte	.LCFI23
 1401 01ec 04000000 		.4byte	.LCFI24
 1402 01f0 0200     		.2byte	0x2
 1403 01f2 7D       		.byte	0x7d
 1404 01f3 08       		.sleb128 8
 1405 01f4 04000000 		.4byte	.LCFI24
 1406 01f8 06000000 		.4byte	.LCFI25
 1407 01fc 0200     		.2byte	0x2
 1408 01fe 7D       		.byte	0x7d
 1409 01ff 10       		.sleb128 16
 1410 0200 06000000 		.4byte	.LCFI25
 1411 0204 20000000 		.4byte	.LFE10
 1412 0208 0200     		.2byte	0x2
 1413 020a 77       		.byte	0x77
 1414 020b 10       		.sleb128 16
 1415 020c 00000000 		.4byte	0
 1416 0210 00000000 		.4byte	0
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 39


 1417              	.LLST11:
 1418 0214 00000000 		.4byte	.LFB11
 1419 0218 02000000 		.4byte	.LCFI26
 1420 021c 0200     		.2byte	0x2
 1421 021e 7D       		.byte	0x7d
 1422 021f 00       		.sleb128 0
 1423 0220 02000000 		.4byte	.LCFI26
 1424 0224 04000000 		.4byte	.LCFI27
 1425 0228 0200     		.2byte	0x2
 1426 022a 7D       		.byte	0x7d
 1427 022b 08       		.sleb128 8
 1428 022c 04000000 		.4byte	.LCFI27
 1429 0230 14000000 		.4byte	.LFE11
 1430 0234 0200     		.2byte	0x2
 1431 0236 77       		.byte	0x77
 1432 0237 08       		.sleb128 8
 1433 0238 00000000 		.4byte	0
 1434 023c 00000000 		.4byte	0
 1435              	.LLST12:
 1436 0240 00000000 		.4byte	.LFB12
 1437 0244 02000000 		.4byte	.LCFI28
 1438 0248 0200     		.2byte	0x2
 1439 024a 7D       		.byte	0x7d
 1440 024b 00       		.sleb128 0
 1441 024c 02000000 		.4byte	.LCFI28
 1442 0250 04000000 		.4byte	.LCFI29
 1443 0254 0200     		.2byte	0x2
 1444 0256 7D       		.byte	0x7d
 1445 0257 08       		.sleb128 8
 1446 0258 04000000 		.4byte	.LCFI29
 1447 025c 06000000 		.4byte	.LCFI30
 1448 0260 0200     		.2byte	0x2
 1449 0262 7D       		.byte	0x7d
 1450 0263 10       		.sleb128 16
 1451 0264 06000000 		.4byte	.LCFI30
 1452 0268 20000000 		.4byte	.LFE12
 1453 026c 0200     		.2byte	0x2
 1454 026e 77       		.byte	0x77
 1455 026f 10       		.sleb128 16
 1456 0270 00000000 		.4byte	0
 1457 0274 00000000 		.4byte	0
 1458              	.LLST13:
 1459 0278 00000000 		.4byte	.LFB13
 1460 027c 02000000 		.4byte	.LCFI31
 1461 0280 0200     		.2byte	0x2
 1462 0282 7D       		.byte	0x7d
 1463 0283 00       		.sleb128 0
 1464 0284 02000000 		.4byte	.LCFI31
 1465 0288 04000000 		.4byte	.LCFI32
 1466 028c 0200     		.2byte	0x2
 1467 028e 7D       		.byte	0x7d
 1468 028f 08       		.sleb128 8
 1469 0290 04000000 		.4byte	.LCFI32
 1470 0294 1C000000 		.4byte	.LFE13
 1471 0298 0200     		.2byte	0x2
 1472 029a 77       		.byte	0x77
 1473 029b 08       		.sleb128 8
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 40


 1474 029c 00000000 		.4byte	0
 1475 02a0 00000000 		.4byte	0
 1476              	.LLST14:
 1477 02a4 00000000 		.4byte	.LFB14
 1478 02a8 02000000 		.4byte	.LCFI33
 1479 02ac 0200     		.2byte	0x2
 1480 02ae 7D       		.byte	0x7d
 1481 02af 00       		.sleb128 0
 1482 02b0 02000000 		.4byte	.LCFI33
 1483 02b4 04000000 		.4byte	.LCFI34
 1484 02b8 0200     		.2byte	0x2
 1485 02ba 7D       		.byte	0x7d
 1486 02bb 08       		.sleb128 8
 1487 02bc 04000000 		.4byte	.LCFI34
 1488 02c0 1C000000 		.4byte	.LFE14
 1489 02c4 0200     		.2byte	0x2
 1490 02c6 77       		.byte	0x77
 1491 02c7 08       		.sleb128 8
 1492 02c8 00000000 		.4byte	0
 1493 02cc 00000000 		.4byte	0
 1494              		.section	.debug_aranges,"",%progbits
 1495 0000 8C000000 		.4byte	0x8c
 1496 0004 0200     		.2byte	0x2
 1497 0006 00000000 		.4byte	.Ldebug_info0
 1498 000a 04       		.byte	0x4
 1499 000b 00       		.byte	0
 1500 000c 0000     		.2byte	0
 1501 000e 0000     		.2byte	0
 1502 0010 00000000 		.4byte	.LFB0
 1503 0014 4C000000 		.4byte	.LFE0-.LFB0
 1504 0018 00000000 		.4byte	.LFB1
 1505 001c 20000000 		.4byte	.LFE1-.LFB1
 1506 0020 00000000 		.4byte	.LFB2
 1507 0024 24000000 		.4byte	.LFE2-.LFB2
 1508 0028 00000000 		.4byte	.LFB3
 1509 002c 1C000000 		.4byte	.LFE3-.LFB3
 1510 0030 00000000 		.4byte	.LFB4
 1511 0034 20000000 		.4byte	.LFE4-.LFB4
 1512 0038 00000000 		.4byte	.LFB5
 1513 003c 10000000 		.4byte	.LFE5-.LFB5
 1514 0040 00000000 		.4byte	.LFB6
 1515 0044 14000000 		.4byte	.LFE6-.LFB6
 1516 0048 00000000 		.4byte	.LFB7
 1517 004c 14000000 		.4byte	.LFE7-.LFB7
 1518 0050 00000000 		.4byte	.LFB8
 1519 0054 20000000 		.4byte	.LFE8-.LFB8
 1520 0058 00000000 		.4byte	.LFB9
 1521 005c 14000000 		.4byte	.LFE9-.LFB9
 1522 0060 00000000 		.4byte	.LFB10
 1523 0064 20000000 		.4byte	.LFE10-.LFB10
 1524 0068 00000000 		.4byte	.LFB11
 1525 006c 14000000 		.4byte	.LFE11-.LFB11
 1526 0070 00000000 		.4byte	.LFB12
 1527 0074 20000000 		.4byte	.LFE12-.LFB12
 1528 0078 00000000 		.4byte	.LFB13
 1529 007c 1C000000 		.4byte	.LFE13-.LFB13
 1530 0080 00000000 		.4byte	.LFB14
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 41


 1531 0084 1C000000 		.4byte	.LFE14-.LFB14
 1532 0088 00000000 		.4byte	0
 1533 008c 00000000 		.4byte	0
 1534              		.section	.debug_ranges,"",%progbits
 1535              	.Ldebug_ranges0:
 1536 0000 00000000 		.4byte	.LFB0
 1537 0004 4C000000 		.4byte	.LFE0
 1538 0008 00000000 		.4byte	.LFB1
 1539 000c 20000000 		.4byte	.LFE1
 1540 0010 00000000 		.4byte	.LFB2
 1541 0014 24000000 		.4byte	.LFE2
 1542 0018 00000000 		.4byte	.LFB3
 1543 001c 1C000000 		.4byte	.LFE3
 1544 0020 00000000 		.4byte	.LFB4
 1545 0024 20000000 		.4byte	.LFE4
 1546 0028 00000000 		.4byte	.LFB5
 1547 002c 10000000 		.4byte	.LFE5
 1548 0030 00000000 		.4byte	.LFB6
 1549 0034 14000000 		.4byte	.LFE6
 1550 0038 00000000 		.4byte	.LFB7
 1551 003c 14000000 		.4byte	.LFE7
 1552 0040 00000000 		.4byte	.LFB8
 1553 0044 20000000 		.4byte	.LFE8
 1554 0048 00000000 		.4byte	.LFB9
 1555 004c 14000000 		.4byte	.LFE9
 1556 0050 00000000 		.4byte	.LFB10
 1557 0054 20000000 		.4byte	.LFE10
 1558 0058 00000000 		.4byte	.LFB11
 1559 005c 14000000 		.4byte	.LFE11
 1560 0060 00000000 		.4byte	.LFB12
 1561 0064 20000000 		.4byte	.LFE12
 1562 0068 00000000 		.4byte	.LFB13
 1563 006c 1C000000 		.4byte	.LFE13
 1564 0070 00000000 		.4byte	.LFB14
 1565 0074 1C000000 		.4byte	.LFE14
 1566 0078 00000000 		.4byte	0
 1567 007c 00000000 		.4byte	0
 1568              		.section	.debug_line,"",%progbits
 1569              	.Ldebug_line0:
 1570 0000 77010000 		.section	.debug_str,"MS",%progbits,1
 1570      02004B00 
 1570      00000201 
 1570      FB0E0D00 
 1570      01010101 
 1571              	.LASF28:
 1572 0000 70657269 		.ascii	"period\000"
 1572      6F6400
 1573              	.LASF3:
 1574 0007 73686F72 		.ascii	"short unsigned int\000"
 1574      7420756E 
 1574      7369676E 
 1574      65642069 
 1574      6E7400
 1575              	.LASF19:
 1576 001a 6C6F6744 		.ascii	"logDataTimer_SetInterruptMode\000"
 1576      61746154 
 1576      696D6572 
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 42


 1576      5F536574 
 1576      496E7465 
 1577              	.LASF29:
 1578 0038 6C6F6744 		.ascii	"logDataTimer_ReadCapture\000"
 1578      61746154 
 1578      696D6572 
 1578      5F526561 
 1578      64436170 
 1579              	.LASF26:
 1580 0051 6C6F6744 		.ascii	"logDataTimer_ReadPeriod\000"
 1580      61746154 
 1580      696D6572 
 1580      5F526561 
 1580      64506572 
 1581              	.LASF18:
 1582 0069 6C6F6744 		.ascii	"logDataTimer_Init\000"
 1582      61746154 
 1582      696D6572 
 1582      5F496E69 
 1582      7400
 1583              	.LASF16:
 1584 007b 6C6F6744 		.ascii	"logDataTimer_Start\000"
 1584      61746154 
 1584      696D6572 
 1584      5F537461 
 1584      727400
 1585              	.LASF9:
 1586 008e 666C6F61 		.ascii	"float\000"
 1586      7400
 1587              	.LASF31:
 1588 0094 636F756E 		.ascii	"counter\000"
 1588      74657200 
 1589              	.LASF1:
 1590 009c 756E7369 		.ascii	"unsigned char\000"
 1590      676E6564 
 1590      20636861 
 1590      7200
 1591              	.LASF13:
 1592 00aa 72656738 		.ascii	"reg8\000"
 1592      00
 1593              	.LASF15:
 1594 00af 6C6F6744 		.ascii	"logDataTimer_Enable\000"
 1594      61746154 
 1594      696D6572 
 1594      5F456E61 
 1594      626C6500 
 1595              	.LASF38:
 1596 00c3 6C6F6744 		.ascii	"logDataTimer_initVar\000"
 1596      61746154 
 1596      696D6572 
 1596      5F696E69 
 1596      74566172 
 1597              	.LASF5:
 1598 00d8 6C6F6E67 		.ascii	"long unsigned int\000"
 1598      20756E73 
 1598      69676E65 
 1598      6420696E 
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 43


 1598      7400
 1599              	.LASF12:
 1600 00ea 75696E74 		.ascii	"uint8\000"
 1600      3800
 1601              	.LASF25:
 1602 00f0 636F6E74 		.ascii	"control\000"
 1602      726F6C00 
 1603              	.LASF35:
 1604 00f8 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\logDataTimer.c\000"
 1604      6E657261 
 1604      7465645F 
 1604      536F7572 
 1604      63655C50 
 1605              	.LASF10:
 1606 0120 646F7562 		.ascii	"double\000"
 1606      6C6500
 1607              	.LASF21:
 1608 0127 6C6F6744 		.ascii	"logDataTimer_ReadStatusRegister\000"
 1608      61746154 
 1608      696D6572 
 1608      5F526561 
 1608      64537461 
 1609              	.LASF32:
 1610 0147 6C6F6744 		.ascii	"logDataTimer_ReadCounter\000"
 1610      61746154 
 1610      696D6572 
 1610      5F526561 
 1610      64436F75 
 1611              	.LASF20:
 1612 0160 6C6F6744 		.ascii	"logDataTimer_SoftwareCapture\000"
 1612      61746154 
 1612      696D6572 
 1612      5F536F66 
 1612      74776172 
 1613              	.LASF8:
 1614 017d 756E7369 		.ascii	"unsigned int\000"
 1614      676E6564 
 1614      20696E74 
 1614      00
 1615              	.LASF17:
 1616 018a 6C6F6744 		.ascii	"logDataTimer_Stop\000"
 1616      61746154 
 1616      696D6572 
 1616      5F53746F 
 1616      7000
 1617              	.LASF7:
 1618 019c 6C6F6E67 		.ascii	"long long unsigned int\000"
 1618      206C6F6E 
 1618      6720756E 
 1618      7369676E 
 1618      65642069 
 1619              	.LASF14:
 1620 01b3 73697A65 		.ascii	"sizetype\000"
 1620      74797065 
 1620      00
 1621              	.LASF6:
 1622 01bc 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 44


 1622      206C6F6E 
 1622      6720696E 
 1622      7400
 1623              	.LASF37:
 1624 01ca 6C6F6744 		.ascii	"logDataTimer_interruptState\000"
 1624      61746154 
 1624      696D6572 
 1624      5F696E74 
 1624      65727275 
 1625              	.LASF24:
 1626 01e6 696E7465 		.ascii	"interruptMode\000"
 1626      72727570 
 1626      744D6F64 
 1626      6500
 1627              	.LASF33:
 1628 01f4 6C6F6744 		.ascii	"logDataTimer_ClearFIFO\000"
 1628      61746154 
 1628      696D6572 
 1628      5F436C65 
 1628      61724649 
 1629              	.LASF36:
 1630 020b 433A5C63 		.ascii	"C:\\controllers\\controllers.cydsn\000"
 1630      6F6E7472 
 1630      6F6C6C65 
 1630      72735C63 
 1630      6F6E7472 
 1631              	.LASF2:
 1632 022c 73686F72 		.ascii	"short int\000"
 1632      7420696E 
 1632      7400
 1633              	.LASF27:
 1634 0236 6C6F6744 		.ascii	"logDataTimer_WritePeriod\000"
 1634      61746154 
 1634      696D6572 
 1634      5F577269 
 1634      74655065 
 1635              	.LASF34:
 1636 024f 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 1636      4320342E 
 1636      372E3320 
 1636      32303133 
 1636      30333132 
 1637 0282 616E6368 		.ascii	"anch revision 196615]\000"
 1637      20726576 
 1637      6973696F 
 1637      6E203139 
 1637      36363135 
 1638              	.LASF22:
 1639 0298 6C6F6744 		.ascii	"logDataTimer_ReadControlRegister\000"
 1639      61746154 
 1639      696D6572 
 1639      5F526561 
 1639      64436F6E 
 1640              	.LASF4:
 1641 02b9 6C6F6E67 		.ascii	"long int\000"
 1641      20696E74 
 1641      00
ARM GAS  C:\Users\BJRN~1\AppData\Local\Temp\ccOPnDXd.s 			page 45


 1642              	.LASF11:
 1643 02c2 63686172 		.ascii	"char\000"
 1643      00
 1644              	.LASF23:
 1645 02c7 6C6F6744 		.ascii	"logDataTimer_WriteControlRegister\000"
 1645      61746154 
 1645      696D6572 
 1645      5F577269 
 1645      7465436F 
 1646              	.LASF0:
 1647 02e9 7369676E 		.ascii	"signed char\000"
 1647      65642063 
 1647      68617200 
 1648              	.LASF30:
 1649 02f5 6C6F6744 		.ascii	"logDataTimer_WriteCounter\000"
 1649      61746154 
 1649      696D6572 
 1649      5F577269 
 1649      7465436F 
 1650              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
